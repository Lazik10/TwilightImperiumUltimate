// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwilightImperiumUltimate.DataAccess.DbContexts.TwilightImperium;

#nullable disable

namespace TwilightImperiumUltimate.DataAccess.Migrations
{
    [DbContext(typeof(TwilightImperiumDbContext))]
    [Migration("20240724163420_Initial-Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Cards.ActionCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnumName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EnumName")
                        .HasColumnOrder(1);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Text")
                        .HasColumnOrder(4);

                    b.Property<string>("TimingWindow")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TimingWindow")
                        .HasColumnOrder(3);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ActionCards", "Card");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Cards.AgendaCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgendaCardType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("AgendaCardType")
                        .HasColumnOrder(3);

                    b.Property<string>("EnumName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EnumName")
                        .HasColumnOrder(1);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Text")
                        .HasColumnOrder(4);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("AgendaCards", "Card");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Cards.ExplorationCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnumName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EnumName")
                        .HasColumnOrder(1);

                    b.Property<string>("ExplorationPlanetTrait")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ExplorationPlanetTrait")
                        .HasColumnOrder(3);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Text")
                        .HasColumnOrder(4);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ExplorationCards", "Card");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Cards.FrontierCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnumName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EnumName")
                        .HasColumnOrder(1);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(4);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Text")
                        .HasColumnOrder(3);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("FrontierCards", "Card");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Cards.ObjectiveCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnumName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EnumName")
                        .HasColumnOrder(1);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(6);

                    b.Property<string>("ObjectiveCardType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ObjectiveCardType")
                        .HasColumnOrder(3);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Text")
                        .HasColumnOrder(5);

                    b.Property<string>("TimingWindow")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TimingWindow")
                        .HasColumnOrder(4);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ObjectiveCards", "Card");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Cards.PromissoryNoteCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnumName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EnumName")
                        .HasColumnOrder(1);

                    b.Property<string>("Faction")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Faction")
                        .HasColumnOrder(3);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("Text")
                        .HasColumnOrder(4);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("PromissaryNoteCards", "Card");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Cards.RelicCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnumName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EnumName")
                        .HasColumnOrder(1);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(4);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Text")
                        .HasColumnOrder(3);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("RelicCards", "Card");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Cards.StrategyCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnumName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EnumName")
                        .HasColumnOrder(1);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(7);

                    b.Property<string>("InitiativeOrder")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("InitiativeOrder")
                        .HasColumnOrder(3);

                    b.Property<string>("PrimaryAbilityText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PrimaryAbilityText")
                        .HasColumnOrder(4);

                    b.Property<string>("SecondaryAbilityText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SecondaryAbilityText")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Text")
                        .HasColumnOrder(6);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("StrategyCards", "Card");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Factions.Faction", b =>
                {
                    b.Property<string>("FactionName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FactionName")
                        .HasColumnOrder(1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Action")
                        .HasColumnOrder(5);

                    b.Property<int>("Commodities")
                        .HasColumnType("integer")
                        .HasColumnName("Commodities")
                        .HasColumnOrder(4);

                    b.Property<string>("ComplexityRating")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ComplexityRating")
                        .HasColumnOrder(2);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(10);

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("History")
                        .HasColumnOrder(6);

                    b.Property<string>("HomeSystem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("HomeSystem")
                        .HasColumnOrder(3);

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("Quote")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Quote")
                        .HasColumnOrder(7);

                    b.Property<string>("SystemInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("SystemInfo")
                        .HasColumnOrder(9);

                    b.Property<string>("SystemStats")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("SystemStats")
                        .HasColumnOrder(8);

                    b.HasKey("FactionName");

                    b.ToTable("Factions", "Faction");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Factions.FactionColorImportance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Color")
                        .HasColumnOrder(2);

                    b.Property<string>("FactionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FactionName")
                        .HasColumnOrder(1);

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FactionColorImportances", "Faction");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Galaxy.Planet", b =>
                {
                    b.Property<string>("PlanetName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PlanetName")
                        .HasColumnOrder(1);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(8);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Influence")
                        .HasColumnType("integer")
                        .HasColumnName("Influence")
                        .HasColumnOrder(3);

                    b.Property<string>("IsLegendary")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("IsLegendary")
                        .HasColumnOrder(4);

                    b.Property<string>("PlanetTrait")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PlanetTrait")
                        .HasColumnOrder(6);

                    b.Property<int>("Resources")
                        .HasColumnType("integer")
                        .HasColumnName("Resources")
                        .HasColumnOrder(2);

                    b.Property<string>("SystemTileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SystemTileName")
                        .HasColumnOrder(7);

                    b.Property<string>("TechnologySkip")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TechnologySkip")
                        .HasColumnOrder(5);

                    b.HasKey("PlanetName");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PlanetName"));

                    b.HasIndex("SystemTileName");

                    b.ToTable("Planets", "Galaxy");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Galaxy.SystemTile", b =>
                {
                    b.Property<string>("SystemTileName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SystemTileName")
                        .HasColumnOrder(1);

                    b.Property<string>("Anomaly")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Anomaly")
                        .HasColumnOrder(5);

                    b.Property<string>("FactionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FactionName")
                        .HasColumnOrder(4);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(6);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SystemTileCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("SystemTileCode")
                        .HasColumnOrder(2);

                    b.Property<string>("TileCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TileCategory")
                        .HasColumnOrder(3);

                    b.HasKey("SystemTileName");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("SystemTileName"));

                    b.ToTable("SystemTiles", "Galaxy");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Galaxy.Wormhole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(3);

                    b.Property<string>("SystemTileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SystemTileName")
                        .HasColumnOrder(2);

                    b.Property<string>("WormholeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("WormholeName")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("SystemTileName");

                    b.ToTable("Wormholes", "Galaxy");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.News.NewsArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Content")
                        .HasColumnOrder(2);

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("CreatedAt")
                        .HasColumnOrder(3);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Title")
                        .HasColumnOrder(1);

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("UpdatedAt")
                        .HasColumnOrder(4);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserId")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("UserId");

                    b.ToTable("NewsArticles", "News");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Player.Player", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Color")
                        .HasColumnOrder(2);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Name");

                    b.ToTable("Players", "Player");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.RelationshipEntities.FactionTechnology", b =>
                {
                    b.Property<string>("FactionName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FactionName")
                        .HasColumnOrder(1);

                    b.Property<string>("TechnologyName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TechnologyName")
                        .HasColumnOrder(2);

                    b.Property<string>("StartingTechnology")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("StartingTechnology")
                        .HasColumnOrder(3);

                    b.HasKey("FactionName", "TechnologyName");

                    b.HasIndex("TechnologyName");

                    b.ToTable("FactionTechnology", "Relationships");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.RelationshipEntities.FactionUnit", b =>
                {
                    b.Property<string>("FactionName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(0);

                    b.Property<string>("UnitName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(1);

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.HasKey("FactionName", "UnitName");

                    b.HasIndex("UnitName");

                    b.ToTable("FactionUnit", "Relationships");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Rules.Rule", b =>
                {
                    b.Property<string>("RuleCategory")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RuleCategory")
                        .HasColumnOrder(1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Content")
                        .HasColumnOrder(2);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("RuleCategory");

                    b.ToTable("Rules", "Rule");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Technologies.Technology", b =>
                {
                    b.Property<string>("TechnologyName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TechnologyName")
                        .HasColumnOrder(1);

                    b.Property<string>("FactionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FactionName")
                        .HasColumnOrder(4);

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GameVersion")
                        .HasColumnOrder(7);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IsFactionTechnology")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("IsFactionTechnology")
                        .HasColumnOrder(5);

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Level")
                        .HasColumnOrder(3);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Text")
                        .HasColumnOrder(6);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type")
                        .HasColumnOrder(2);

                    b.HasKey("TechnologyName");

                    b.ToTable("Technologies", "Technology");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Units.Unit", b =>
                {
                    b.Property<string>("UnitName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UnitName")
                        .HasColumnOrder(1);

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("Capacity")
                        .HasColumnOrder(6);

                    b.Property<int>("Combat")
                        .HasColumnType("integer")
                        .HasColumnName("Combat")
                        .HasColumnOrder(4);

                    b.Property<int>("Cost")
                        .HasColumnType("integer")
                        .HasColumnName("Cost")
                        .HasColumnOrder(3);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Move")
                        .HasColumnType("integer")
                        .HasColumnName("Move")
                        .HasColumnOrder(5);

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UnitType")
                        .HasColumnOrder(2);

                    b.HasKey("UnitName");

                    b.ToTable("Units", "Unit");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Users.TwilightImperiumUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscordId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("FavoriteFaction")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SteamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Website.Website", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description")
                        .HasColumnOrder(2);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Title")
                        .HasColumnOrder(1);

                    b.Property<string>("WebsitePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("WebsitePath")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("Websites", "Website");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Users.TwilightImperiumUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Users.TwilightImperiumUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Users.TwilightImperiumUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Users.TwilightImperiumUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Galaxy.Planet", b =>
                {
                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Galaxy.SystemTile", "SystemTile")
                        .WithMany("Planets")
                        .HasForeignKey("SystemTileName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemTile");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Galaxy.Wormhole", b =>
                {
                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Galaxy.SystemTile", "SystemTile")
                        .WithMany("Wormholes")
                        .HasForeignKey("SystemTileName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemTile");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.News.NewsArticle", b =>
                {
                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Users.TwilightImperiumUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.RelationshipEntities.FactionTechnology", b =>
                {
                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Factions.Faction", "Faction")
                        .WithMany("FactionTechnologies")
                        .HasForeignKey("FactionName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Technologies.Technology", "Technology")
                        .WithMany("FactionTechnologies")
                        .HasForeignKey("TechnologyName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faction");

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.RelationshipEntities.FactionUnit", b =>
                {
                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Factions.Faction", "Faction")
                        .WithMany("FactionUnits")
                        .HasForeignKey("FactionName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwilightImperiumUltimate.Core.Entities.Units.Unit", "Unit")
                        .WithMany("FactionUnits")
                        .HasForeignKey("UnitName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faction");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Factions.Faction", b =>
                {
                    b.Navigation("FactionTechnologies");

                    b.Navigation("FactionUnits");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Galaxy.SystemTile", b =>
                {
                    b.Navigation("Planets");

                    b.Navigation("Wormholes");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Technologies.Technology", b =>
                {
                    b.Navigation("FactionTechnologies");
                });

            modelBuilder.Entity("TwilightImperiumUltimate.Core.Entities.Units.Unit", b =>
                {
                    b.Navigation("FactionUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
