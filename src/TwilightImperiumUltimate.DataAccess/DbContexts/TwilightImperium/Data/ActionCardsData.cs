namespace TwilightImperiumUltimate.DataAccess.DbContexts.TwilightImperium.Data;

internal static class ActionCardsData
{
    internal static List<ActionCard> ActionCards => new List<ActionCard>
    {
        new() { Id = 1, EnumName = ActionCardName.AncientBurialSites, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 2, EnumName = ActionCardName.ArchaeologicalExpedition, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 3, EnumName = ActionCardName.AssassinateRepresentative, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 4, EnumName = ActionCardName.Blitz, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 5, EnumName = ActionCardName.Bribery, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 6, EnumName = ActionCardName.Bunker, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 7, EnumName = ActionCardName.ConfoundingLegalText, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 8, EnumName = ActionCardName.ConfusingLegalText, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 9, EnumName = ActionCardName.ConstructionRider, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 10, EnumName = ActionCardName.Counterstroke, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 11, EnumName = ActionCardName.CoupDetat, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 12, EnumName = ActionCardName.CourageousToTheEnd, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 13, EnumName = ActionCardName.CrippleDefenses, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 14, EnumName = ActionCardName.DeadlyPlot, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 15, EnumName = ActionCardName.DecoyOperation, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 16, EnumName = ActionCardName.DiplomacyRider, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 17, EnumName = ActionCardName.DiplomaticPressure, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 18, EnumName = ActionCardName.DirectHit, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 19, EnumName = ActionCardName.Disable, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 20, EnumName = ActionCardName.DistinguishedCouncilor, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 21, EnumName = ActionCardName.DivertFunding, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 22, EnumName = ActionCardName.EconomicInitiative, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 23, EnumName = ActionCardName.EmergencyRepairs, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 24, EnumName = ActionCardName.ExperimentalBattlestation, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.BaseGame },
        new() { Id = 25, EnumName = ActionCardName.ExplorationProbe, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 26, EnumName = ActionCardName.FighterConscription, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 27, EnumName = ActionCardName.FighterPrototype, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 28, EnumName = ActionCardName.FireTeam, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 29, EnumName = ActionCardName.FlankSpeed, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.BaseGame },
        new() { Id = 30, EnumName = ActionCardName.FocusedResearch, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 31, EnumName = ActionCardName.ForwardSupplyBase, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 32, EnumName = ActionCardName.FrontlineDeployment, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 33, EnumName = ActionCardName.GhostShip, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 34, EnumName = ActionCardName.GhostSquad, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 35, EnumName = ActionCardName.HackElection, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 36, EnumName = ActionCardName.HarnessEnergy, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 37, EnumName = ActionCardName.ImperialRider, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 38, EnumName = ActionCardName.Impersonation, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 39, EnumName = ActionCardName.InTheSilenceOfSpace, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.BaseGame },
        new() { Id = 40, EnumName = ActionCardName.IndustrialInitiative, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 41, EnumName = ActionCardName.Infiltrate, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 42, EnumName = ActionCardName.InsiderInformation, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 43, EnumName = ActionCardName.Insubordination, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 44, EnumName = ActionCardName.Intercept, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 45, EnumName = ActionCardName.LeadershipRider, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 46, EnumName = ActionCardName.LostStarChart, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.BaseGame },
        new() { Id = 47, EnumName = ActionCardName.LuckyShot, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 48, EnumName = ActionCardName.ManeuveringJets, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 49, EnumName = ActionCardName.ManipulateInvestments, TimingWindow = TimingWindow.StrategyPhase, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 50, EnumName = ActionCardName.MasterPlan, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 51, EnumName = ActionCardName.MiningInitiative, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 52, EnumName = ActionCardName.MoraleBoost, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 53, EnumName = ActionCardName.NavSuite, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 54, EnumName = ActionCardName.Parley, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 55, EnumName = ActionCardName.Plagiarize, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 56, EnumName = ActionCardName.Plague, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 57, EnumName = ActionCardName.PoliticalStability, TimingWindow = TimingWindow.StatusPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 58, EnumName = ActionCardName.PoliticsRider, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 59, EnumName = ActionCardName.PublicDisgrace, TimingWindow = TimingWindow.StrategyPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 60, EnumName = ActionCardName.Rally, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 61, EnumName = ActionCardName.ReactorMeltdown, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 62, EnumName = ActionCardName.RefitTroops, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 63, EnumName = ActionCardName.ReflectiveShielding, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 64, EnumName = ActionCardName.Reparations, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.BaseGame },
        new() { Id = 65, EnumName = ActionCardName.RepealLaw, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 66, EnumName = ActionCardName.RevealPrototype, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 67, EnumName = ActionCardName.ReverseEngineer, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 68, EnumName = ActionCardName.RiseOfAMessiah, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 69, EnumName = ActionCardName.Rout, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 70, EnumName = ActionCardName.Sabotage, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.BaseGame },
        new() { Id = 71, EnumName = ActionCardName.Sanction, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 72, EnumName = ActionCardName.ScrambleFrequency, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 73, EnumName = ActionCardName.Scuttle, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 74, EnumName = ActionCardName.SeizeArtifact, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.ProphecyOfKings },
        new() { Id = 75, EnumName = ActionCardName.ShieldsHolding, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 76, EnumName = ActionCardName.SignalJamming, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 77, EnumName = ActionCardName.SkilledRetreat, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.BaseGame },
        new() { Id = 78, EnumName = ActionCardName.SolarFlare, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 79, EnumName = ActionCardName.Spy, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 80, EnumName = ActionCardName.Summit, TimingWindow = TimingWindow.StrategyPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 81, EnumName = ActionCardName.TacticalBombardment, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 82, EnumName = ActionCardName.TechnologyRider, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 83, EnumName = ActionCardName.TradeRider, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 84, EnumName = ActionCardName.UnexpectedAction, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 85, EnumName = ActionCardName.UnstablePlanet, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 86, EnumName = ActionCardName.Upgrade, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.BaseGame },
        new() { Id = 87, EnumName = ActionCardName.Uprising, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.BaseGame },
        new() { Id = 88, EnumName = ActionCardName.Veto, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 89, EnumName = ActionCardName.WarMachine, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.CodexOrdinian },
        new() { Id = 90, EnumName = ActionCardName.WarfareRider, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.BaseGame },
        new() { Id = 91, EnumName = ActionCardName.Waylay, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.ProphecyOfKings },

        new() { Id = 92, EnumName = ActionCardName.AbyssalStarpaths, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 93, EnumName = ActionCardName.AggressiveBroker, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 94, EnumName = ActionCardName.AIAugury, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 95, EnumName = ActionCardName.Arbitrage, TimingWindow = TimingWindow.TacticalAction, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 96, EnumName = ActionCardName.BountyContracts, TimingWindow = TimingWindow.StatusPhase, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 97, EnumName = ActionCardName.CarapacePlating, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 98, EnumName = ActionCardName.ClassifiedWeapons, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 99, EnumName = ActionCardName.ConfusedSage, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 100, EnumName = ActionCardName.Contagion, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 101, EnumName = ActionCardName.EchoShielding, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 102, EnumName = ActionCardName.EmergencyMeeting, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 103, EnumName = ActionCardName.EscapeClause, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 104, EnumName = ActionCardName.ForbiddenKnowledge, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 105, EnumName = ActionCardName.FreeTradeInitiative, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 106, EnumName = ActionCardName.FreedomFighters, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 107, EnumName = ActionCardName.FulfillmentProtocols, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 108, EnumName = ActionCardName.HostileWorld, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 109, EnumName = ActionCardName.IllusoryDuplication, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 110, EnumName = ActionCardName.MicrometeoroidSwarm, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 111, EnumName = ActionCardName.NeuralHammer, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 112, EnumName = ActionCardName.PersonnelWrit, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 113, EnumName = ActionCardName.PlanetaryRigs, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 114, EnumName = ActionCardName.Preparation, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 115, EnumName = ActionCardName.ProfessionalArchaeologists, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 116, EnumName = ActionCardName.RemnantCollection, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 117, EnumName = ActionCardName.Renegotiation, TimingWindow = TimingWindow.Reaction, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 118, EnumName = ActionCardName.SafetyOverrides, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 119, EnumName = ActionCardName.SecuredTrove, TimingWindow = TimingWindow.Action, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 120, EnumName = ActionCardName.SingularityCharge, TimingWindow = TimingWindow.Combat, GameVersion = GameVersion.UnchartedSpace },
        new() { Id = 121, EnumName = ActionCardName.SpecialSession, TimingWindow = TimingWindow.AgendaPhase, GameVersion = GameVersion.UnchartedSpace },
    };
}
