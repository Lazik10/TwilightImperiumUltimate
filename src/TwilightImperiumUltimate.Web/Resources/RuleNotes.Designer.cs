//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TwilightImperiumUltimate.Web.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RuleNotes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RuleNotes() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TwilightImperiumUltimate.Web.Resources.RuleNotes", typeof(RuleNotes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot have more commodities than their commodity value.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AbandonedWarehouses {
            get {
                return ResourceManager.GetString("AbandonedWarehouses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AccretionEngine {
            get {
                return ResourceManager.GetString("AccretionEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The flagship or war sun may be in the home system of an eliminated player.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AchieveSupremacy {
            get {
                return ResourceManager.GetString("AchieveSupremacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A &lt;i&gt;Valefar Assimilator&lt;/i&gt; technology will count if it is currently copying another player&amp;rsquo;s faction technology.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AdaptNewStrategies {
            get {
                return ResourceManager.GetString("AdaptNewStrategies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;When exhausted, a prerequisite will be ignored, and &lt;i&gt;AI Development Algorithm&lt;/i&gt; will still count towards meeting a warfare technology (red) prerequisite.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;For example, &lt;i&gt;AI Development Algorithm&lt;/i&gt; alone may be used to research the Destroyer II unit upgrade.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AIDevelopmentAlgorithm {
            get {
                return ResourceManager.GetString("AIDevelopmentAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;An &lt;i&gt;Alliance&lt;/i&gt; must be played by the receiving player as soon as it is received. It cannot be kept secret.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If the active player receives an &lt;i&gt;Alliance&lt;/i&gt;, they cannot then attempt to trade it with another player. It must be played immediately.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;&lt;i&gt;Alliance&lt;/i&gt; is returned when the system is activated, even if the active player will perform no hostile acts towards the other player this turn.&lt;/li&gt;
        ///    &lt;li&gt;If an effect other than activating  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Alliance {
            get {
                return ResourceManager.GetString("Alliance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The influence, resources and trade goods must be spent during the status phase. Any that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;A planet may be exhausted to spend either its resource or influence value, but not both.&lt;/li&gt;
        ///    &lt;li&gt;Trade goods may be spent as influence or resources when scoring &lt;i&gt;Amass Wealth&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AMassWealth {
            get {
                return ResourceManager.GetString("AMassWealth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Ancient Burial Sites&lt;/i&gt; is played before the first agenda is revealed.&lt;/li&gt;
        ///    &lt;li&gt;A player with zero cultural planets may be chosen.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AncientBurialSites {
            get {
                return ResourceManager.GetString("AncientBurialSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AncientShipyard {
            get {
                return ResourceManager.GetString("AncientShipyard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;When &lt;i&gt;Anti&amp;ndash;Intellectual Revolution&lt;/i&gt; is a law in play, a player that directly gains a technology will be unaffected.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;The Nekro player is never affected by the &lt;i&gt;Anti&amp;ndash;Intellectual Revolution&lt;/i&gt; law.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The Nekro player&amp;rsquo;s &lt;i&gt;Valefar Assimilator&lt;/i&gt; technologies count for the &amp;ldquo;Against&amp;rdquo; effect, whether their tokens are on another player&amp;rsquo;s faction technology or not.&lt;/li&gt;
        ///    &lt;li&gt;A player with no non&amp;ndash;figh [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AntiIntellectualRevolution {
            get {
                return ResourceManager.GetString("AntiIntellectualRevolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The &amp;minus;1 applies to space cannon rolls during both the &lt;b&gt;Space Cannon Offense&lt;/b&gt; and &lt;b&gt;Space Cannon Defense&lt;/b&gt; steps.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AntimassDeflectors {
            get {
                return ResourceManager.GetString("AntimassDeflectors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ArcaneCitadel {
            get {
                return ResourceManager.GetString("ArcaneCitadel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must control at least one planet with a trait to play and resolve &lt;i&gt;Archaeological Expedition&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ArchaeologicalExpedition {
            get {
                return ResourceManager.GetString("ArchaeologicalExpedition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player with three scored secret objectives may draw a fourth. However, they must immediately shuffle it into the secret objective deck.&lt;/li&gt;
        ///	&lt;li&gt;If a player draws the &lt;i&gt;Drive the Debate&lt;/i&gt; secret objective while resolving &lt;i&gt;Archived Secret&lt;/i&gt;, they cannot score it immediately.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ArchivedSecret {
            get {
                return ResourceManager.GetString("ArchivedSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ArmedForcesStandardization {
            get {
                return ResourceManager.GetString("ArmedForcesStandardization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ArmsReduction {
            get {
                return ResourceManager.GetString("ArmsReduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ArticlesOfWar {
            get {
                return ResourceManager.GetString("ArticlesOfWar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The chosen player may still play rider cards.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AssassinateRepresentative {
            get {
                return ResourceManager.GetString("AssassinateRepresentative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player with &lt;i&gt;Assault Cannon&lt;/i&gt; must mandatorily resolve its ability if they meet the requirement.&lt;/li&gt;
        ///    &lt;li&gt;If a player loses ships before they can resolve the &lt;i&gt;Assault Cannon&lt;/i&gt; ability, they will be unable to resolve it if they no longer have three or more non&amp;ndash;fighter ships.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;This will most commonly happen when both players in a combat have &lt;i&gt;Assault Cannon&lt;/i&gt;, and the defender has exactly three non&amp;ndash;fighter ships.&lt;/li&gt;
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AssaultCannon {
            get {
                return ResourceManager.GetString("AssaultCannon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string AzdelsKey {
            get {
                return ResourceManager.GetString("AzdelsKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of units in the system is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;A ship, ground force, or structure will all qualify for &lt;i&gt;Become a Legend&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;If one player has a ground force or structure on a planet in a qualifying system, and another player has a ship in the same system, both players may count the system towards the requirements of &lt;i&gt;Become a Legend&lt;/i&gt;.&lt;/li&gt;
        ///        &lt;li&gt;A player may have ships in the system containing a l [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BecomeALegend {
            get {
                return ResourceManager.GetString("BecomeALegend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The lost planet may be in any player&amp;rsquo;s home system. It does not have a planet in the home system of the player scoring &lt;i&gt;Become a Martyr&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;The lost planet may be in the home system of an eliminated player.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;If the lost planet is the last planet a player controls, that player will be eliminated before they score &lt;i&gt;Become a Martyr&lt;/i&gt;, if they meet the other requirements for elimination.&lt;/li&gt;
        ///    &lt;li&gt;If the player with the &lt;i&gt;Shard of  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BecomeAMartyr {
            get {
                return ResourceManager.GetString("BecomeAMartyr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player with a ship in the wormhole nexus, or in any other system with both an alpha and beta wormhole, qualifies for &lt;i&gt;Become the Gatekeeper&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;Any ground forces or structures are irrelevant.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string BecomeTheGatekeeper {
            get {
                return ResourceManager.GetString("BecomeTheGatekeeper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The following promissory notes qualify for scoring &lt;i&gt;Betray a Friend&lt;/i&gt;:&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;&lt;i&gt;Alliance&lt;/i&gt;.&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Support for the Throne&lt;/i&gt;.&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Stymie&lt;/i&gt; (Arborec).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Trade Convoys&lt;/i&gt; (Hacan).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Dark Pact&lt;/i&gt; (Empyrean).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Blood Pact&lt;/i&gt; (Empyrean).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Promise of Protection&lt;/i&gt; (Mentak).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Gift of Prescience&lt;/i&gt; (Naalu).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BetrayAFriend {
            get {
                return ResourceManager.GetString("BetrayAFriend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string BioStims {
            get {
                return ResourceManager.GetString("BioStims", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string BioticResearchFacility {
            get {
                return ResourceManager.GetString("BioticResearchFacility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the L1Z1X player plays &lt;i&gt;Blitz&lt;/i&gt;, they may use the gained &lt;sc&gt;Bombardment&lt;/sc&gt; ability of each of their non&amp;ndash;fighter ships in the system when resolving their &lt;sc&gt;Harrow&lt;/sc&gt; faction ability during that invasion.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Blitz {
            get {
                return ResourceManager.GetString("Blitz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any system containing a Vuil&amp;rsquo;raith player&amp;rsquo;s Dimensional Tear is a gravity rift, and thus, an anomaly.&lt;/li&gt;
        ///    &lt;li&gt;A wormhole is not an anomaly.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string BraveTheVoid {
            get {
                return ResourceManager.GetString("BraveTheVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Bribery&lt;/i&gt; may be played after the speaker has abstained, or would vote if they are unable to.&lt;/li&gt;
        ///    &lt;li&gt;A player may spend zero trade goods when they play &lt;i&gt;Bribery&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;A player must have cast votes for an outcome to play &lt;i&gt;Bribery&lt;/i&gt;, and the additional votes must be cast for the same outcome.&lt;/li&gt;
        ///    &lt;li&gt;The speaker may play &lt;i&gt;Distinguished Councilor&lt;/i&gt; after another player plays &lt;i&gt;Bribery&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Bribery&lt;/i&gt; is played before any eff [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Bribery {
            get {
                return ResourceManager.GetString("Bribery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string BuildDefenses {
            get {
                return ResourceManager.GetString("BuildDefenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The modifier will apply to bombardment rolls for each planet in the active system.&lt;/li&gt;
        ///    &lt;li&gt;The modifier will apply to bombardment rolls made for the L1Z1X player&amp;rsquo;s &lt;sc&gt;Harrow&lt;/sc&gt; faction ability during that invasion.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Bunker {
            get {
                return ResourceManager.GetString("Bunker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The active player may still use the &lt;sc&gt;Space Cannon&lt;/sc&gt; ability of any units during the &lt;b&gt;Space Cannon Offense&lt;/b&gt; step of the tactical action.&lt;/li&gt;
        ///    &lt;li&gt;If a player has units in the active system from before the tactical action in which their &lt;i&gt;Ceasefire&lt;/i&gt; is played, those units will remain in the active system.&lt;/li&gt;
        ///    &lt;li&gt;If the active player already has units with capacity in the active system, they may transport ground forces on planets in that system into the spa [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Ceasefire {
            get {
                return ResourceManager.GetString("Ceasefire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The trade goods must be spent during the status phase. Any trade goods that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CentralizeGalacticTrade {
            get {
                return ResourceManager.GetString("CentralizeGalacticTrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If there are any trade goods on a chosen strategy card while &lt;i&gt;Checks and Balances&lt;/i&gt; is a law in play, the player who chose the strategy card gains them, not the player who receives that card.&lt;/li&gt;
        ///    &lt;li&gt;The &lt;i&gt;Public Disgrace&lt;/i&gt; action card may be played after a player has chosen a strategy card and announced which player will be receiving it. The player must choose a different strategy card, and then choose the same or a different player to receive it.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ChecksAndBalances {
            get {
                return ResourceManager.GetString("ChecksAndBalances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &amp;ldquo;For&amp;rdquo; effect of &lt;i&gt;Clandestine Operations&lt;/i&gt; is resolved, the removed tokens may be from any pool or pools on a player&amp;rsquo;s command sheet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ClandestineOperations {
            get {
                return ResourceManager.GetString("ClandestineOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If &lt;i&gt;Classified Document Leaks&lt;/i&gt; is revealed when only one secret objective is in play, players may only vote for that secret objective or abstain. If no votes are cast, the speaker must decide for that secret objective to be elected.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Players may still play riders if only one secret objective is in play.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The player that originally owned the secret objective elected by &lt;i&gt;Classified Document Leaks&lt;/i&gt; cannot score it again after it becomes a  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ClassifiedDocumentLeaks {
            get {
                return ResourceManager.GetString("ClassifiedDocumentLeaks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the player that originally controlled the elected planet has the fewest victory points, they may choose themselves to place an infantry on that planet.&lt;/li&gt;
        ///    &lt;li&gt;If the elected planet has the &lt;i&gt;Demilitarized Zone&lt;/i&gt; exploration card attached, no infantry will be placed on it. Control of the planet will remain with the original player.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ColonialRedistribution {
            get {
                return ResourceManager.GetString("ColonialRedistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CommandAnArmada {
            get {
                return ResourceManager.GetString("CommandAnArmada", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Committee Formation&lt;/i&gt; is resolved after any riders have been played, if the owner so chooses. Riders will resolve if the predicted outcome matches the player elected by the effect of &lt;i&gt;Committee Formation&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;The owner of &lt;i&gt;Committee Formation&lt;/i&gt; may play riders before they resolve &lt;i&gt;Committee Formation&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The &lt;i&gt;Confusing Legal Text&lt;/i&gt; and &lt;i&gt;Confounding Legal Text&lt;/i&gt; action cards may be played after &lt;i&gt;Committee Formation&lt;/i&gt; ha [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CommitteeFormation {
            get {
                return ResourceManager.GetString("CommitteeFormation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;All trade goods are gained together.&lt;/li&gt;
        ///    &lt;li&gt;A planet with zero units on it is eligible to be elected.&lt;/li&gt;
        ///    &lt;li&gt;Structures are unaffected by &lt;i&gt;Compensated Disarmament&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;The Titans of Ul&amp;rsquo;s Hel&amp;ndash;Titans are also ground forces and are thus affected by &lt;i&gt;Compensated Disarmament&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CompensatedDisarmament {
            get {
                return ResourceManager.GetString("CompensatedDisarmament", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any predictions made on the outcome of the agenda resolve based on the newly elected player.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Confounding Legal Text&lt;/i&gt; is played after any effects that allow a player to cast additional votes.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Confounding Legal Text&lt;/i&gt; is played before &lt;i&gt;Deadly Plot&lt;/i&gt; is played, before revealing hidden agenda for the &lt;i&gt;Covert Legislation&lt;/i&gt; agenda, and before the &lt;i&gt;Drive the Debate&lt;/i&gt; objective may be scored.
        ///    &lt;li&gt;&lt;i&gt;Confounding Legal Text&lt;/i&gt; may be  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ConfoundingLegalText {
            get {
                return ResourceManager.GetString("ConfoundingLegalText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any predictions made on the outcome of the agenda resolve based on the newly elected player.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Confusing Legal Text&lt;/i&gt; is played after any effects that allow a player to cast additional votes.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Confusing Legal Text&lt;/i&gt; is played before &lt;i&gt;Deadly Plot&lt;/i&gt; is played, before revealing hidden agenda for the &lt;i&gt;Covert Legislation&lt;/i&gt; agenda, and before the &lt;i&gt;Drive the Debate&lt;/i&gt; objective may be scored.
        ///    &lt;li&gt;&lt;i&gt;Confusing Legal Text&lt;/i&gt; may be played [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ConfusingLegalText {
            get {
                return ResourceManager.GetString("ConfusingLegalText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The planet may be in the home system of an eliminated player.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ConquerTheWeak {
            get {
                return ResourceManager.GetString("ConquerTheWeak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After playing a &lt;i&gt;Construction Rider&lt;/i&gt;, a player may use additional abilities, including playing other rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any other riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Construction Rider&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play a &lt;i&gt;Construction Rider&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;If a player wishes to place a space dock, but there are [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ConstructionRider {
            get {
                return ResourceManager.GetString("ConstructionRider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ConstructMassiveCities {
            get {
                return ResourceManager.GetString("ConstructMassiveCities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of units in the system is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;A ship, ground force, or structure will all qualify for &lt;i&gt;Control the Borderlands&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If one player has a ground force or structure on a planet in a qualifying system, and another player has a ship in the same system, both players may count the system towards the requirements of &lt;i&gt;Control the Borderlands&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The units may be in another player&amp;rsquo;s ho [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ControlTheBorderlands {
            get {
                return ResourceManager.GetString("ControlTheBorderlands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any ground forces or structures are irrelevant.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ControlTheRegion {
            get {
                return ResourceManager.GetString("ControlTheRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;When &lt;i&gt;Conventions of War&lt;/i&gt; is a law in play a player may still use the &lt;i&gt;Tactical Bombardment&lt;/i&gt; action card or the &lt;i&gt;X&amp;ndash;89 Baterial Weapon&lt;/i&gt; technology on a cultural planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ConventionsOfWar {
            get {
                return ResourceManager.GetString("ConventionsOfWar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CoreMine {
            get {
                return ResourceManager.GetString("CoreMine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A planet with zero infantry on it may be elected.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CoreMining {
            get {
                return ResourceManager.GetString("CoreMining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CornerTheMarket {
            get {
                return ResourceManager.GetString("CornerTheMarket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CouncilPreserve {
            get {
                return ResourceManager.GetString("CouncilPreserve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Counterstroke {
            get {
                return ResourceManager.GetString("Counterstroke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The active player may still use any &amp;ldquo;at the end of your turn&amp;rdquo; abilities.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CoupDetat {
            get {
                return ResourceManager.GetString("CoupDetat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any combat roll modifiers will not apply to the dice roll for &lt;i&gt;Courageous to the End&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;Effects that cancel hits, such as &lt;sc&gt;Sustain Damage&lt;/sc&gt;, cannot be used to prevent ships from being destroyed.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CourageousToTheEnd {
            get {
                return ResourceManager.GetString("CourageousToTheEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the Speaker draws &lt;i&gt;Classified Document Leaks&lt;/i&gt;, &lt;i&gt;Judicial Abolishment&lt;/i&gt;, &lt;i&gt;Miscount Disclosed&lt;/i&gt; or &lt;i&gt;New Constitution&lt;/i&gt;, when that agenda would be discarded if revealed, both the hidden agenda and &lt;i&gt;Covert Legislation&lt;/i&gt; are discarded.&lt;/li&gt;
        ///    &lt;li&gt;Any effects that take place when or after an agenda is revealed instead take place when or after the speaker has drawn and announced the possible outcomes for the hidden agenda.&lt;/li&gt;
        ///    &lt;li&gt;If an effect, such as th [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CovertLegislation {
            get {
                return ResourceManager.GetString("CovertLegislation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The chosen planet may have zero PDS on it.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CrippleDefenses {
            get {
                return ResourceManager.GetString("CrippleDefenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the relic deck is empty, a player may still purge three Cultural Relic Fragments as an action.&lt;/li&gt;
        ///    &lt;li&gt;If an eliminated player had any Cultural Relic Fragments, they are discarded to the cultural planet exploration discard pile.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CulturalRelicFragment {
            get {
                return ResourceManager.GetString("CulturalRelicFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CutSupplyLines {
            get {
                return ResourceManager.GetString("CutSupplyLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string CyberneticResearchFacility {
            get {
                return ResourceManager.GetString("CyberneticResearchFacility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DacxiveAnimators {
            get {
                return ResourceManager.GetString("DacxiveAnimators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A ship may be moved into the system containing the frontier token during the same action that it is explored.&lt;/li&gt;
        ///    &lt;li&gt;Exploring the frontier token happens at the end of the tactical action. Notably, this is after the &lt;b&gt;Space Cannon Offense&lt;/b&gt; and/or &lt;b&gt;Space Combat&lt;/b&gt; steps.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot use &lt;i&gt;Dark Energy Tap&lt;/i&gt; to retreat into a system that contains another player&amp;rsquo;s units, including ground forces and structures on planets.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DarkEnergyTap {
            get {
                return ResourceManager.GetString("DarkEnergyTap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Darken the Skies&lt;/i&gt; may be scored by winning a combat in an eliminated player&amp;rsquo;s home system.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DarkenTheSkies {
            get {
                return ResourceManager.GetString("DarkenTheSkies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DarkVisions {
            get {
                return ResourceManager.GetString("DarkVisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any prediction made for a rider or similar ability is incorrect, and will not resolve.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot make the prediction that &lt;i&gt;Deadly Plot&lt;/i&gt; will be played when they predict the outcome of an agenda.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Deadly Plot&lt;/i&gt; is played after any effects that allow a player to cast additional votes, and after any effects that change the outcome of an agenda.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Deadly Plot&lt;/i&gt; is played before revealing hidden agenda for the &lt;i&gt;Covert Legisl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DeadlyPlot {
            get {
                return ResourceManager.GetString("DeadlyPlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the relic deck is empty, &lt;i&gt;Dead World&lt;/i&gt; will be discarded with no effect.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DeadWorld {
            get {
                return ResourceManager.GetString("DeadWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a mech is damaged when it is removed, it will remain damaged when it is placed.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DecoyOperation {
            get {
                return ResourceManager.GetString("DecoyOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of units in the system is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;A ship, ground force, or structure will all qualify for &lt;i&gt;Defy Space and Time&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If one player has a ground force or structure on Mallice, and another player has a ship in the wormhole nexus, both players may score &lt;i&gt;Defy Space and Time&lt;/i&gt;, if it is elected by the &lt;i&gt;Classified Document Leaks&lt;/i&gt; agenda.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DefySpaceAndTime {
            get {
                return ResourceManager.GetString("DefySpaceAndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After the active player has returned ground forces on the planet to the space area, if they does not have enough capacity in the space area for the returned ground forces, including zero capacity, they will have to remove fighters and/or ground forces to meet capacity limits.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DemilitarizedZone {
            get {
                return ResourceManager.GetString("DemilitarizedZone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player need not win the combat to score &lt;i&gt;Demonstrate Your Power&lt;/i&gt;; they are able to score it if their opponent plays the &lt;i&gt;Skilled Retreat&lt;/i&gt; action card.&lt;/li&gt;
        ///    &lt;li&gt;A player involved in a combat due to the Mahact player&amp;rsquo;s &lt;i&gt;Benediction&lt;/i&gt; hero ability may score &lt;i&gt;Demonstrate Your Power&lt;/i&gt; after that combat.&lt;/li&gt;
        ///    &lt;li&gt;Units that are temporarily ships for the duration of a space combat, such as those made so by the Nekro player&amp;rsquo;s flagship, &lt;i&gt;The Alas [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DemonstrateYourPower {
            get {
                return ResourceManager.GetString("DemonstrateYourPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player with three scored secret objectives may draw a fourth. However, they must immediately shuffle it into the secret objective deck.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DerelictVessel {
            get {
                return ResourceManager.GetString("DerelictVessel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DesertedTradeStation {
            get {
                return ResourceManager.GetString("DesertedTradeStation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player will not gain a relic when scoring &lt;i&gt;Destroy Heretical Works&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;The relic fragments may the the same or different types.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DestroyHereticalWorks {
            get {
                return ResourceManager.GetString("DestroyHereticalWorks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player destroys their own flagship or war sun during combat, such as via the effect of &lt;i&gt;The Crown of Thalnos&lt;/i&gt; relic, their opponent cannot score &lt;i&gt;Destroy their Greatest Ship&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Destroy their Greatest Ship&lt;/i&gt; is scored as soon as the war sun or flagship is destroyed; it does not require waiting until the end of the combat.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;A player does not have to win a combat to score &lt;i&gt;Destroy their Greatest Ship&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;A player [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DestroyTheirGreatestShip {
            get {
                return ResourceManager.GetString("DestroyTheirGreatestShip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A &lt;i&gt;Valefar Assimilator&lt;/i&gt; technology will count if it is currently copying another player&amp;rsquo;s faction unit upgrade technology.&lt;/li&gt;
        ///    &lt;li&gt;If the Nekro player owns both a generic unit upgrade technology and a faction unit upgrade technology of the same type, only the faction unit upgrade technology will count for &lt;i&gt;Develop Weaponry&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DevelopWeaponry {
            get {
                return ResourceManager.GetString("DevelopWeaponry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Dictate Policy&lt;/i&gt; is scored after the third law resolves. As such, the &lt;i&gt;Deadly Plot&lt;/i&gt; action card will prevent any player from scoring &lt;i&gt;Dictate Policy&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Dictate Policy&lt;/i&gt; is scored before any rider action cards are resolved.&lt;/li&gt;
        ///    &lt;li&gt;If there are three laws in play at the start of the agenda phase, a player may score &lt;i&gt;Dictate Policy&lt;/i&gt; immediately.&lt;/li&gt;
        ///    &lt;li&gt;If the &lt;i&gt;Political Data Nexus&lt;/i&gt; Xxcha hero ability puts a third law in play, &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DictatePolicy {
            get {
                return ResourceManager.GetString("DictatePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The Mecatol Rex system may be chosen.&lt;/li&gt;
        ///    &lt;li&gt;After playing a &lt;i&gt;Diplomacy Rider&lt;/i&gt;, a player may use additional abilities, including playing other rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any other riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Diplomacy Rider&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play a &lt;i&gt;Diplomacy Rider&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DiplomacyRider {
            get {
                return ResourceManager.GetString("DiplomacyRider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The target player chooses which promissory note they give.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot play a second &lt;i&gt;Diplomatic Pressure&lt;/i&gt; targeting the same player during the same agenda.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DiplomaticPressure {
            get {
                return ResourceManager.GetString("DiplomaticPressure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If multiple ships use their &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability, a &lt;i&gt;Direct Hit&lt;/i&gt; may be played for each.&lt;/li&gt;
        ///    &lt;li&gt;A &lt;i&gt;Direct Hit&lt;/i&gt; may be used whenever hits produced by a player&amp;rsquo;s units or abilities are cancelled by a unit using its &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability.&lt;/li&gt;
        ///    &lt;li&gt;When a player uses the &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability of one of their units, they do not have to decide if another of their units in the same combat will use its &lt;sc&gt;Sustain Damage&lt;/sc&gt; abil [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DirectHit {
            get {
                return ResourceManager.GetString("DirectHit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the Ul player is targeted, their Hel&amp;ndash;Titans will still participate in the ground combat during the current invasion.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Disable&lt;/i&gt; has no effect on the &lt;i&gt;Magen Defense Grid &amp;Omega;&lt;/i&gt; technology.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Disable {
            get {
                return ResourceManager.GetString("Disable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of attachments a planet has is irrelevant, if it has at least one.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DiscoverLostOutposts {
            get {
                return ResourceManager.GetString("DiscoverLostOutposts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DistinguishedAdmiral {
            get {
                return ResourceManager.GetString("DistinguishedAdmiral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must have cast votes for an outcome to play &lt;i&gt;Distinguished Councilor&lt;/i&gt;, and the additional votes must be cast for the same outcome.&lt;/li&gt;
        ///    &lt;li&gt;A player may only play &lt;i&gt;Distinguished Councilor&lt;/i&gt; after their normal vote, not after they cast additional votes at another point.&lt;/li&gt;
        ///    &lt;li&gt;The speaker may play &lt;i&gt;Distinguished Councilor&lt;/i&gt; after another player plays &lt;i&gt;Bribery&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Distinguished Councilor&lt;/i&gt; is played before any effects that chan [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DistinguishedCouncilor {
            get {
                return ResourceManager.GetString("DistinguishedCouncilor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DiversifyResearch {
            get {
                return ResourceManager.GetString("DiversifyResearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must have at least one non&amp;ndash;unit upgrade, non&amp;ndash;faction technology to play and resolve &lt;i&gt;Divert Funding&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;A player must still meet the prerequisites for the technology they research.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;The returned technology does not count towards meeting the prerequisites.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The researched technology may be a unit upgrade technology, and it may be a faction technology.&lt;/li&gt;
        ///    &lt;li&gt;The researched technology cannot be the retur [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DivertFunding {
            get {
                return ResourceManager.GetString("DivertFunding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DominusOrb {
            get {
                return ResourceManager.GetString("DominusOrb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any &amp;ldquo;For&amp;rdquo;/&amp;ldquo;Against&amp;rdquo; agenda cannot count for &lt;i&gt;Drive the Debate&lt;/i&gt;, even if the outcome affects only a single player.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Drive the Debate&lt;/i&gt; is scored immediately before the agenda resolves. The &lt;i&gt;Confounding Legal Text&lt;/i&gt; and &lt;i&gt;Confusing Legal Text&lt;/i&gt; action cards will allow only the newly elected player to score &lt;i&gt;Drive the Debate&lt;/i&gt;, and the &lt;i&gt;Deadly Plot&lt;/i&gt; action card will prevent any player from scoring &lt;i&gt;Drive the Debate&lt;/i&gt;. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DriveTheDebate {
            get {
                return ResourceManager.GetString("DriveTheDebate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must mandatorily repair a unit with &lt;i&gt;Duranium Armor&lt;/i&gt; during each round of combat, if possible.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Duranium Armor&lt;/i&gt; is used even if a player&amp;rsquo;s opponent produced no hits during a round of combat.&lt;/li&gt;
        ///    &lt;li&gt;If a player starts a combat with a damaged unit, they use &lt;i&gt;Duranium Armor&lt;/i&gt; in the first round of combat.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;A player may use &lt;i&gt;Duranium Armor&lt;/i&gt; to repair a unit damaged by &lt;sc&gt;Space Cannon&lt;/sc&gt; or &lt;sc&gt;Bombardment&lt;/sc&gt;  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DuraniumArmor {
            get {
                return ResourceManager.GetString("DuraniumArmor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player uses the purge ability of &lt;i&gt;Dynamis Core&lt;/i&gt;, they will need to return commodities if they now exceed their original commodity value.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DynamisCore {
            get {
                return ResourceManager.GetString("DynamisCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string DysonSphere {
            get {
                return ResourceManager.GetString("DysonSphere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &amp;ldquo;For&amp;rdquo; outcome of &lt;i&gt;Economic Equality&lt;/i&gt; is resolved, the Mentak player may resolve their &lt;sc&gt;Pillage&lt;/sc&gt; faction ability against each of their neighbors.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EconomicEquality {
            get {
                return ResourceManager.GetString("EconomicEquality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player with zero cultural planets may play &lt;i&gt;Economic Initiative&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EconomicInitiative {
            get {
                return ResourceManager.GetString("EconomicInitiative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player may play &lt;i&gt;Emergency Repairs&lt;/i&gt; at the start of the first round of combat to repair ships damaged in a previous combat, or during the &lt;b&gt;Space Cannon Offense&lt;/b&gt; step of the current action.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EmergencyRepairs {
            get {
                return ResourceManager.GetString("EmergencyRepairs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The effect of the &lt;i&gt;Enforced Travel Ban&lt;/i&gt; law does not affect the Creuss player.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Enforced Travel Ban&lt;/i&gt; only prevents movement using the normal adjacency provided by wormholes. Other effects that creates adjacency, such as &lt;i&gt;Wormhole Reconstruction&lt;/i&gt; agenda or the &lt;i&gt;Lost Star Chart&lt;/i&gt; action card, may be used to allow movement between systems containing wormholes.&lt;/li&gt;
        ///    &lt;li&gt;When the &lt;i&gt;Enforced Travel Ban&lt;/i&gt; law is in play, units cannot move through  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EnforcedTravelBan {
            get {
                return ResourceManager.GetString("EnforcedTravelBan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EngineerAMarvel {
            get {
                return ResourceManager.GetString("EngineerAMarvel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot play &lt;i&gt;Enigmatic Device&lt;/i&gt; as a component action if they have less than six resources available.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EnigmaticDevice {
            get {
                return ResourceManager.GetString("EnigmaticDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EntropicField {
            get {
                return ResourceManager.GetString("EntropicField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The resources must be spent during the status phase. Any resources that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;Trade goods may be spent as resources when scoring &lt;i&gt;Erect a Monument&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ErectAMonument {
            get {
                return ResourceManager.GetString("ErectAMonument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ESixGoNetwork {
            get {
                return ResourceManager.GetString("ESixGoNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EstablishAPerimeter {
            get {
                return ResourceManager.GetString("EstablishAPerimeter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;With the right attachments, the requirements of &lt;i&gt;Establish Hegemony&lt;/i&gt; may be met with a single planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EstablishHegemony {
            get {
                return ResourceManager.GetString("EstablishHegemony", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The effect of the &lt;i&gt;Executive Sanctions&lt;/i&gt; law does not affect the Yssaril player.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ExecutiveSanctions {
            get {
                return ResourceManager.GetString("ExecutiveSanctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The planets cannot be in any player&amp;rsquo;s home system, including those of eliminiated players.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ExpandBorders {
            get {
                return ResourceManager.GetString("ExpandBorders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Expedition {
            get {
                return ResourceManager.GetString("Expedition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The selected space dock will use the &lt;sc&gt;Space Cannon&lt;/sc&gt; ability during the &lt;b&gt;Space Cannon Offense&lt;/b&gt; step of the current tactical action.&lt;/li&gt;
        ///    &lt;li&gt;Hits may only be assigned to the active player&amp;rsquo;s ships.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Experimental Battlestation&lt;/i&gt; cannot be played if no ships are moved into the active system, even if the active player already has ships in that system.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;If ships are moved into the active system, ships that were already  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ExperimentalBattlestation {
            get {
                return ResourceManager.GetString("ExperimentalBattlestation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must have an exploration token in or adjacent to a system containing one or more of their ships to play and resolve &lt;i&gt;Exploration Probe&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ExplorationProbe {
            get {
                return ResourceManager.GetString("ExplorationProbe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of units in the system is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;A system that contains a planet destroyed by the &lt;i&gt;Stellar Converter&lt;/i&gt; relic, and no other planets, is considered to contain no planets.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ExploreDeepSpace {
            get {
                return ResourceManager.GetString("ExploreDeepSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string EyeOfVogul {
            get {
                return ResourceManager.GetString("EyeOfVogul", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Only one fighter will be placed in a system containing both a space dock and a ship with capacity.&lt;/li&gt;
        ///    &lt;li&gt;A player may place a fighter in a system that is at its capacity limit. If they do so, they must then remove a fighter or ground force from the space area of that system.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FighterConscription {
            get {
                return ResourceManager.GetString("FighterConscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FighterPrototype {
            get {
                return ResourceManager.GetString("FighterPrototype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Scoring &lt;i&gt;Fight with Precision&lt;/i&gt; will count as that player&amp;rsquo;s single secret objective scoring for that combat.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Fight with Precision&lt;/i&gt; is scored immediately in the &lt;b&gt;Anti&amp;ndash;Fighter Barrage&lt;/b&gt; step of combat.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;A player does not have to win a combat to score &lt;i&gt;Fight with Precision&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;If a player&amp;rsquo;s last fighter in a system is destroyed, but an ability allows that player to then place fighters into that syste [rest of string was truncated]&quot;;.
        /// </summary>
        public static string FightWithPrecision {
            get {
                return ResourceManager.GetString("FightWithPrecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Scoring &lt;i&gt;Fight with Precision &amp;Omega;&lt;/i&gt; will count as that player&amp;rsquo;s single secret objective scoring for that combat.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Fight with Precision&lt;/i&gt; is scored immediately in the &lt;b&gt;Anti&amp;ndash;Fighter Barrage&lt;/b&gt; step of combat.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;A player does not have to win a combat to score &lt;i&gt;Fight with Precision&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;If a player&amp;rsquo;s last fighter in a system is destroyed, but an ability allows that player to then place fighters into th [rest of string was truncated]&quot;;.
        /// </summary>
        public static string FightWithPrecisionOmega {
            get {
                return ResourceManager.GetString("FightWithPrecisionOmega", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any modifiers on the original combat roll will apply to the reroll.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FireTeam {
            get {
                return ResourceManager.GetString("FireTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A second &lt;i&gt;Flank Speed&lt;/i&gt; cannot be played to give +2 to the move value of each ship.&lt;/li&gt;
        ///    &lt;li&gt;Cancelling &lt;i&gt;Flank Speed&lt;/i&gt; will not cancel the system activation.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FlankSpeed {
            get {
                return ResourceManager.GetString("FlankSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Effects that trigger at the start or end of a player&amp;rsquo;s turn will not trigger between each of those player&amp;rsquo;s actions.&lt;/li&gt;
        ///    &lt;li&gt;A player may use the ability of &lt;i&gt;Fleet Logistics&lt;/i&gt; the same turn they gain it.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FleetLogistics {
            get {
                return ResourceManager.GetString("FleetLogistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The effect of the &lt;i&gt;Fleet Regulations&lt;/i&gt; law does not prevent the Letnev player from using their &lt;sc&gt;Armada&lt;/sc&gt; faction ability. They may have up to six non&amp;ndash;fighter ships in a system if they have four command tokens in their fleet pool.&lt;/li&gt;
        ///    &lt;li&gt;The Mahact player may only have up to four command tokens in their fleet pool when the &lt;i&gt;Fleet Regulations&lt;/i&gt; law is in play, regardless of which faction the command tokens belong to.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FleetRegulations {
            get {
                return ResourceManager.GetString("FleetRegulations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot play &lt;i&gt;Focused Research&lt;/i&gt; if they have less than four trade goods.&lt;/li&gt;
        ///    &lt;li&gt;A player must still meet the prerequisites for the technology they research.&lt;/li&gt;
        ///    &lt;li&gt;Other players must decide whether to play &lt;i&gt;Sabotage&lt;/i&gt; before the player playing &lt;i&gt;Focused Research&lt;/i&gt; announces which technology they are researching.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FocusedResearch {
            get {
                return ResourceManager.GetString("FocusedResearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FoldedSpace {
            get {
                return ResourceManager.GetString("FoldedSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ForgeAnAlliance {
            get {
                return ResourceManager.GetString("ForgeAnAlliance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The action cards must be discarded during the status phase. Any action cards that were discarded during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FormASpyNetwork {
            get {
                return ResourceManager.GetString("FormASpyNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FormGalacticBrainTrust {
            get {
                return ResourceManager.GetString("FormGalacticBrainTrust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ForwardSupplyBase {
            get {
                return ResourceManager.GetString("ForwardSupplyBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The Hacan player&amp;rsquo;s &lt;sc&gt;Guild Ships&lt;/sc&gt; faction ability and &lt;i&gt;Trade Convoys&lt;/i&gt; promissory note does not make a player neighbors with all other players.&lt;/li&gt;
        ///    &lt;li&gt;If a player has units or controls a planet in a system containing an alpha wormhole, and the Creuss player has units or controls a planet in a system containing a beta wormhole, or vice versa, those two players are neighbors.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FosterCohesion {
            get {
                return ResourceManager.GetString("FosterCohesion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FotgottenThrone {
            get {
                return ResourceManager.GetString("FotgottenThrone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The resources must be spent during the status phase. Any resources that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;Trade goods may be spent as resources when scoring &lt;i&gt;Found a Golden Age&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FoundAGoldenAge {
            get {
                return ResourceManager.GetString("FoundAGoldenAge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FoundResearchOutposts {
            get {
                return ResourceManager.GetString("FoundResearchOutposts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A planet may be exhausted to spend its influence or resources, but not both.&lt;/li&gt;
        ///    &lt;li&gt;If a player is to gain multiple planets in a system, they choose the order in which they gain them, and explore each planet as they gain it before gaining the next. As such, a player cannot place ground forces produced by &lt;i&gt;Freelancers&lt;/i&gt; on a planet in the active system that they are yet to gain and explore.&lt;/li&gt;
        ///    &lt;li&gt;If a player wishes to place a unit, but there are none of that type [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Freelancers {
            get {
                return ResourceManager.GetString("Freelancers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must control at least one planet to play and resolve &lt;i&gt;Frontline Deployment&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;All three infantry must be placed on a single planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FrontlineDeployment {
            get {
                return ResourceManager.GetString("FrontlineDeployment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FuelTheWarMachine {
            get {
                return ResourceManager.GetString("FuelTheWarMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot have more commodities than their commodity value.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string FunctioningBase {
            get {
                return ResourceManager.GetString("FunctioningBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Players resolve the secondary ability of the elected strategy card in speaker order.&lt;/li&gt;
        ///    &lt;li&gt;The secondary ability is resolved immediately, during the agenda phase.&lt;/li&gt;
        ///    &lt;li&gt;Players must pay the influence or resource costs to resolve the abilities of the &lt;i&gt;Leadership&lt;/i&gt;, &lt;i&gt;Warfare&lt;/i&gt; or &lt;i&gt;Technology&lt;/i&gt; strategy cards if they are elected. Any planets used to pay these costs will ready at the end of the agenda phase.&lt;/li&gt;
        ///    &lt;li&gt;If the &lt;i&gt;Technology&lt;/i&gt; strategy c [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GalacticCrisisPact {
            get {
                return ResourceManager.GetString("GalacticCrisisPact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The command tokens must be spent during the status phase. Any command tokens that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;Any effect that triggers when a command token is spent will be triggered six times. For example, if the Muaat player has unlocked their commander, Magmus, they will gain six trade goods, one at a time, when scoring &lt;i&gt;Galvanize the People&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string GalvanizeThePeople {
            get {
                return ResourceManager.GetString("GalvanizeThePeople", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string GammaRelay {
            get {
                return ResourceManager.GetString("GammaRelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string GammaWormhole {
            get {
                return ResourceManager.GetString("GammaWormhole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string GatherAMightyFleet {
            get {
                return ResourceManager.GetString("GatherAMightyFleet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player may place the destroyer in the Creuss gate (tile 17), the wormhole nexus, or any system with a printed wormhole or wormhole token.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Placing the destroyer in the inactive wormhole nexus will cause it to flip to its active side.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The destroyer cannot be placed in the home system of an eliminated player.&lt;/li&gt;
        ///    &lt;li&gt;There must be an eligible system to place the destroyer in for a player to play and resolve &lt;i&gt;Ghost Ship&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GhostShip {
            get {
                return ResourceManager.GetString("GhostShip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Ghost Squad&lt;/i&gt; is played after the active player has assigned which planet each of their ground forces are being committed to. They cannot modify this after &lt;i&gt;Ghost Squad&lt;/i&gt; has been played.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Ghost Squad&lt;/i&gt; may be played whenever ground forces are committed, such as from the Yin player&amp;rsquo;s &lt;i&gt;Quantum Dissemination Ω&lt;/i&gt; hero ability.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;&lt;i&gt;Ghost Squad&lt;/i&gt; cannot be played in response to abilities that place ground forces on a planet withou [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GhostSquad {
            get {
                return ResourceManager.GetString("GhostSquad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If multiple players are resolving the &lt;sc&gt;Space Cannon&lt;/sc&gt; ability of their units against the active player, the active player must resolve capacity limits after assigning one player&amp;rsquo;s hits and before the next player make their space cannon roll.&lt;/li&gt; 
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string GravitonLaserSystem {
            get {
                return ResourceManager.GetString("GravitonLaserSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string GravityDrive {
            get {
                return ResourceManager.GetString("GravityDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The speaker will still vote last.&lt;/li&gt;
        ///    &lt;li&gt;The Argent player will still vote before all other players.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HackElection {
            get {
                return ResourceManager.GetString("HackElection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player has their maximum number of commodities, they may still play &lt;i&gt;Harness Energy&lt;/i&gt;. If they do, they will still trigger any &amp;ldquo;when [this] player replenishes commodities&amp;rdquo; effects, most notably the &lt;i&gt;Trade Agreement&lt;/i&gt; promissory note.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HarnessEnergy {
            get {
                return ResourceManager.GetString("HarnessEnergy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the relic deck is empty, a player may still purge three Hazardous Relic Fragments as an action.&lt;/li&gt;
        ///    &lt;li&gt;If an eliminated player had any Hazardous Relic Fragments, they are discarded to the hazardous planet exploration discard pile.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HazardousRelicFragment {
            get {
                return ResourceManager.GetString("HazardousRelicFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HiddenLab {
            get {
                return ResourceManager.GetString("HiddenLab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;With the right attachments, the requirements of &lt;i&gt;Hoard Raw Materials&lt;/i&gt; may be met with a single planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HoardRawMaterials {
            get {
                return ResourceManager.GetString("HoardRawMaterials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The influence, resources and trade goods must be spent during the status phase. Any that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;A planet may be exhausted to spend either its resource or influence value, but not both.&lt;/li&gt;
        ///    &lt;li&gt;Trade goods may be spent as influence or resources when scoring &lt;i&gt;Hold Vast Reserves&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HoldVastReserves {
            get {
                return ResourceManager.GetString("HoldVastReserves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &lt;i&gt;Holy Planet of Ixth&lt;/i&gt; law is discarded, no player loses a victory point.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HolyPlanetOfIxth {
            get {
                return ResourceManager.GetString("HolyPlanetOfIxth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &lt;i&gt; Homeland Defense Act&lt;/i&gt; law is discarded, players might have to remove PDS so that they have no more than two on each planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HomelandDefenseAct {
            get {
                return ResourceManager.GetString("HomelandDefenseAct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string HyperMetabolism {
            get {
                return ResourceManager.GetString("HyperMetabolism", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If either strategy card had trade goods on it at the start of the strategy phase, those trade goods remain with the player that originally chose the strategy card.&lt;/li&gt;
        ///    &lt;li&gt;In a three&amp;ndash; or four&amp;ndash;player game, the owner of &lt;i&gt;Imperial Arbiter&lt;/i&gt; chooses which strategy cards are swapped.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ImperialArbiter {
            get {
                return ResourceManager.GetString("ImperialArbiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After playing an &lt;i&gt;Imperial Rider&lt;/i&gt;, a player may use additional abilities, including playing other rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any other riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Imperial Rider&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play an &lt;i&gt;Imperial Rider&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ImperialRider {
            get {
                return ResourceManager.GetString("ImperialRider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot play &lt;i&gt;Impersonation&lt;/i&gt; if they have less than three influence available.&lt;/li&gt;
        ///    &lt;li&gt;A player with three secret objectives may draw a fourth, and then shuffle one of their unscored secret objectives into the secret objective deck.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If a player has scored three secret objectives, they may use &lt;i&gt;Impersonation&lt;/i&gt; to draw a secret objective, then immediately shuffle it into the secret objective deck.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Impersonation {
            get {
                return ResourceManager.GetString("Impersonation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of structures on the planet is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;The structures may be on planets in another player&amp;rsquo;s home system.&lt;/li&gt;
        ///    &lt;li&gt;The Saar player&amp;rsquo;s Floating Factories cannot be used to score &lt;i&gt;Improve Infrastructure&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ImproveInfrastructure {
            get {
                return ResourceManager.GetString("ImproveInfrastructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string IncentiveProgram {
            get {
                return ResourceManager.GetString("IncentiveProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player with zero industrial planets may play &lt;i&gt;Industrial Initiative&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string IndustrialInitiative {
            get {
                return ResourceManager.GetString("IndustrialInitiative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the relic deck is empty, a player may still purge three Industrial Relic Fragments as an action.&lt;/li&gt;
        ///    &lt;li&gt;If an eliminated player had any Industrial Relic Fragments, they are discarded to the industrial planet exploration discard pile.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string IndustrialRelicFragment {
            get {
                return ResourceManager.GetString("IndustrialRelicFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the L1Z1X player plays &lt;i&gt;Infiltrate&lt;/i&gt; before they resolve their &lt;sc&gt;Assimilate&lt;/sc&gt; ability, or vice versa, they will replace zero PDS and space docks with zero PDS and space docks when they resolve the latter ability.&lt;/li&gt;
        ///    &lt;li&gt;If a player wishes to place a structure, but there are none of that type left in their reinforcements, they may remove a structure of that type from any system that does not contain one of their command tokens and place that instead. That player  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Infiltrate {
            get {
                return ResourceManager.GetString("Infiltrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string InsiderInformation {
            get {
                return ResourceManager.GetString("InsiderInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Insubordination&lt;/i&gt; cannot target a player with zero command tokens in their tactic pool.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Insubordination {
            get {
                return ResourceManager.GetString("Insubordination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The produced units must be paid for.&lt;/li&gt;
        ///    &lt;li&gt;There is no limit on the number of units produced, so long as the combined cost does not exceed the planet&amp;rsquo;s resource value.&lt;/li&gt;
        ///    &lt;li&gt;Two fighters or two infantry have a combined cost of one resource.&lt;/li&gt;
        ///    &lt;li&gt;A player may produce ships with &lt;i&gt;Integrated Economy&lt;/i&gt;, unless another player has ships in the space area of that planet&amp;rsquo;s system.&lt;/li&gt; 
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string IntegratedEconomy {
            get {
                return ResourceManager.GetString("IntegratedEconomy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;During the next round of combat, the targeted player may declare another retreat.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Intercept&lt;/i&gt; cannot be played to prevent &lt;i&gt;Skilled Retreat&lt;/i&gt; or the Naalu player&amp;rsquo;s &lt;i&gt;Foresight&lt;/i&gt; faction ability.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Intercept {
            get {
                return ResourceManager.GetString("Intercept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string InTheSilenceOfSpace {
            get {
                return ResourceManager.GetString("InTheSilenceOfSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any ships in the Mecatol Rex system are irrelevant.&lt;/li&gt;
        ///    &lt;li&gt;Any ground forces or structures are irrelevant.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string IntimidateCouncil {
            get {
                return ResourceManager.GetString("IntimidateCouncil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The active player chooses which side of the Ion Storm token is initially face up.&lt;/li&gt;
        ///    &lt;li&gt;All ship movement is simultaneous. If the Ion Storm token system is the active system, and the token is currently on the alpha side, a player cannot move a ship from a system with an alpha wormhole, flip the token, then move a ship from a system with the beta wormhole (then flip the token again).&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;The Creuss player may do this by moving their &lt;i&gt;Hil Colish&lt;/i&gt; flagship  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string IonStorm {
            get {
                return ResourceManager.GetString("IonStorm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must still meet the prerequisites for the technology they research.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;A player may use the first technology they research to meet the prerequisites of the second technology they research.&lt;/li&gt;
        ///        &lt;li&gt;A player may exhaust a planet with a technology specialty to ignore a prerequisite on a technology as normal. This planet will ready at the end of the agenda phase.&lt;/li&gt;
        ///        &lt;li&gt;A player may exhaust the &lt;i&gt;AI Development Algorithm&lt;/i&gt; tech [rest of string was truncated]&quot;;.
        /// </summary>
        public static string IxthianArtifact {
            get {
                return ResourceManager.GetString("IxthianArtifact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;JR-XS455-O&lt;/i&gt; is an agent. All rules that apply to agents (and leaders) applies to &lt;i&gt;JR-XS455-O&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;&lt;i&gt;JR-XS455-O&lt;/i&gt; may be refreshed by the Nomad player&apos;s &lt;i&gt;Temporal Command Suite&lt;/i&gt; technology.&lt;/li&gt;
        ///        &lt;li&gt;The ability of &lt;i&gt;JR-XS455-O&lt;/i&gt; may be duplicated by the Yssaril player&amp;rsquo;s agent, Ssruu, if the Yssaril player themselves do not own &lt;i&gt;JR-XS455-O&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string JRXS455OLostTitanPrototypeAgent {
            get {
                return ResourceManager.GetString("JRXS455OLostTitanPrototypeAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If &lt;i&gt;Judicial Abolishment&lt;/i&gt; is revealed when only one law is in play, players may only vote for that law or abstain. If no votes are cast, the speaker must decide for that law to be elected.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Players may still play riders if only one law is in play.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string JudicialAbolishment {
            get {
                return ResourceManager.GetString("JudicialAbolishment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string KeleresShip {
            get {
                return ResourceManager.GetString("KeleresShip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string LazaxSurvivors {
            get {
                return ResourceManager.GetString("LazaxSurvivors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After playing a &lt;i&gt;Leadership Rider&lt;/i&gt;, a player may use additional abilities, including playing other rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any other riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Leadership Rider&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play a &lt;i&gt;Leadership Rider&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string LeadershipRider {
            get {
                return ResourceManager.GetString("LeadershipRider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The command tokens must be spent during the status phase. Any command tokens that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;Any effect that triggers when a command token is spent will be triggered three times. For example, if the Muaat player has unlocked their commander, Magmus, they will gain three trade goods, one at a time when scoring &lt;i&gt;Lead From the Front&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string LeadFromTheFront {
            get {
                return ResourceManager.GetString("LeadFromTheFront", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The three systems may be mutually adjacent to one system, or separate systems.&lt;/li&gt;
        ///    &lt;li&gt;Having ships in an anomaly is irrelevant, unless that system is also adjacent to another anomaly.&lt;/li&gt;
        ///    &lt;li&gt;Any ground forces or structures are irrelevant.&lt;/li&gt;
        ///    &lt;li&gt;Any system containing a Vuil&amp;rsquo;raith player&amp;rsquo;s Dimensional Tear is a gravity rift, and thus, an anomaly.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string LearnTheSecretsOfTheCosmos {
            get {
                return ResourceManager.GetString("LearnTheSecretsOfTheCosmos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string LightWaveDeflector {
            get {
                return ResourceManager.GetString("LightWaveDeflector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot have more commodities than their commodity value.&lt;/li&gt;
        ///    &lt;li&gt;If a player wishes to place a mech, but there are none left in their reinforcements, they may remove a mech from any system that does not contain one of their command tokens and place that instead. The mech will be placed undamaged.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string LocalFabricators {
            get {
                return ResourceManager.GetString("LocalFabricators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string LostCrew {
            get {
                return ResourceManager.GetString("LostCrew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &lt;i&gt;Enforced Travel Ban&lt;/i&gt; law is in play, &lt;i&gt;Lost Star Chart&lt;/i&gt; will allow a player to move through wormholes during this action.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;A player may move from a system containing an alpha wormhole to a system containing an alpha wormhole, and similarly for beta wormholes.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;If the active system contains a beta wormhole, a player that has a unit with the &lt;sc&gt;Deep Space Cannon&lt;/sc&gt; ability in an alpha wormhole may produce hits against ships in t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LostStarChart {
            get {
                return ResourceManager.GetString("LostStarChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot use &lt;i&gt;Lucky Shot&lt;/i&gt; against their own units.&lt;/li&gt;
        ///    &lt;li&gt;Effects that cancel hits, such as &lt;sc&gt;Sustain Damage&lt;/sc&gt;, cannot be used to prevent ships from being destroyed.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string LuckyShot {
            get {
                return ResourceManager.GetString("LuckyShot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Magen Defense Grid&lt;/i&gt; cannot be used if all of a player&amp;rsquo;s units in combat that had the &lt;sc&gt;Planetary Shield&lt;/sc&gt; ability have lost it.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MagenDefenseGrid {
            get {
                return ResourceManager.GetString("MagenDefenseGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The player with &lt;i&gt;Magen Defense Grid &amp;Omega;&lt;/i&gt; chooses which ground force the hit is assigned to.&lt;/li&gt;
        ///    &lt;li&gt;The chosen ground force may cancel the hit by using its &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability, if present. A different ground force with the &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability cannot do so.&lt;/li&gt;
        ///    &lt;li&gt;If the last of a player&amp;rsquo;s ground forces in a ground combat are destroyed by the effect of &lt;i&gt;Magen Defense Grid &amp;Omega;&lt;/i&gt;, that player loses the combat immediately. Th [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MagenDefenseGridOmega {
            get {
                return ResourceManager.GetString("MagenDefenseGridOmega", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MajorEntropicField {
            get {
                return ResourceManager.GetString("MajorEntropicField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the last ground force is destroyed using the &lt;i&gt;X&amp;ndash;89 Bacterial Weapon &amp;Omega;&lt;/i&gt; technology, &lt;i&gt;Make an Example of Their World&lt;/i&gt; cannot be scored.&lt;/li&gt;
        ///    &lt;li&gt;Scoring &lt;i&gt;Make an Example of Their World&lt;/i&gt; will not prevent that player from scoring a secret objective in any ground combats during this tactical action.&lt;/li&gt;
        ///    &lt;li&gt;If a player&amp;rsquo;s last ground force on a planet is destroyed, but an ability allows that player to then place ground forces onto that plan [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MakeAnExampleOfTheirWorld {
            get {
                return ResourceManager.GetString("MakeAnExampleOfTheirWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the last ground force is destroyed using the &lt;i&gt;X&amp;ndash;89 Bacterial Weapon &amp;Omega;&lt;/i&gt; technology, &lt;i&gt;Make an Example of Their World &amp;Omega;&lt;/i&gt; may be scored.&lt;/li&gt;
        ///    &lt;li&gt;Scoring &lt;i&gt;Make an Example of Their World &amp;Omega;&lt;/i&gt; will not prevent that player from scoring a secret objective in any ground combats during this tactical action.&lt;/li&gt;
        ///    &lt;li&gt;If a player&amp;rsquo;s last ground force on a planet is destroyed, but an ability allows that player to then place ground forces o [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MakeAnExampleOfTheirWorldOmega {
            get {
                return ResourceManager.GetString("MakeAnExampleOfTheirWorldOmega", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of units in the system is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;A ship, ground force, or structure will all qualify for &lt;i&gt;Make History&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;If one player has a ground force or structure on a planet in a qualifying system, and another player has a ship in the same system, both players may count the system towards the requirements of &lt;i&gt;Make History&lt;/i&gt;.&lt;/li&gt;
        ///        &lt;li&gt;A player may have ships in the system containing a legenda [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MakeHistory {
            get {
                return ResourceManager.GetString("MakeHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Maneuvering Jets&lt;/i&gt; cannot be used to cancel hits during combat.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Maneuvering Jets&lt;/i&gt; may cancel hits produced during either the &lt;b&gt;Space Cannon Offense&lt;/b&gt; or the &lt;b&gt;Space Cannon Defense&lt;/b&gt; step.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot play a second &lt;i&gt;Maneuvering Jets&lt;/i&gt; to cancel a second hit produced by the same Space Cannon roll.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;During the &lt;b&gt;Space Cannon Offense&lt;/b&gt; step, each player makes their Space Cannon roll independent of each  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ManeuveringJets {
            get {
                return ResourceManager.GetString("ManeuveringJets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The influence must be spent during the status phase. Any influence that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;Trade goods may be spent as influence when scoring &lt;i&gt;Manipulate Galactic Law&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ManipulateGalacticLaw {
            get {
                return ResourceManager.GetString("ManipulateGalacticLaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player still has a strategy card because of &lt;i&gt;Political Stability&lt;/i&gt;, trade goods may be placed on that strategy card. However, those trade goods will remain on that strategy card until it is chosen from the common area.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If a player takes the strategy card with trade goods on it from the player who played &lt;i&gt;Political Stability&lt;/i&gt;, using the ability of the &lt;i&gt;Imperial Arbiter&lt;/i&gt; law or similar, they will not gain the trade goods, which will remain on the [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ManipulateInvestments {
            get {
                return ResourceManager.GetString("ManipulateInvestments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Effects that trigger at the start or end of a player&amp;rsquo;s turn will not trigger between each of those player&amp;rsquo;s action.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MasterPlan {
            get {
                return ResourceManager.GetString("MasterPlan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MasterTheLawsOfPhysics {
            get {
                return ResourceManager.GetString("MasterTheLawsOfPhysics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MasterTheSciences {
            get {
                return ResourceManager.GetString("MasterTheSciences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The player does not have to meet the prerequisites of the technologies they acquire using &lt;i&gt;Maw of Worlds&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MawOfWorlds {
            get {
                return ResourceManager.GetString("MawOfWorlds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Given that each player only has four mechs, to score &lt;i&gt;Mechanize the Military&lt;/i&gt;, a player will have to have all of them on the game board, and on separate planets.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MechanizeTheMilitary {
            get {
                return ResourceManager.GetString("MechanizeTheMilitary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MercenaryOutfit {
            get {
                return ResourceManager.GetString("MercenaryOutfit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MerchantStation {
            get {
                return ResourceManager.GetString("MerchantStation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MineRareMinerals {
            get {
                return ResourceManager.GetString("MineRareMinerals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must control at least one planet to play and resolve &lt;i&gt;Mining Initiative&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Mining Initiative&lt;/i&gt; does not exhaust the chosen planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MiningInitiative {
            get {
                return ResourceManager.GetString("MiningInitiative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MiningWorld {
            get {
                return ResourceManager.GetString("MiningWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MinisterOfAntiquities {
            get {
                return ResourceManager.GetString("MinisterOfAntiquities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///	&lt;li&gt;&lt;i&gt;Minister of Commerce&lt;/i&gt; triggers when its owner has their commodities replenished by any game effect.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Gaining a fixed number of commodities does not trigger &lt;i&gt;Minister of Commerce&lt;/i&gt;, even if doing so would result in its owner having commodities equal to their commodity value.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;All trade goods are gained together.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MinisterOfCommerce {
            get {
                return ResourceManager.GetString("MinisterOfCommerce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the owner of &lt;i&gt;Minister of Exploration&lt;/i&gt; gains control of multiple planets during one invasion, the trade goods are gained one at a time.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MinisterOfExploration {
            get {
                return ResourceManager.GetString("MinisterOfExploration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;All units in that system may use their &lt;sc&gt;Production&lt;/sc&gt; ability, not just the placed space dock.&lt;/li&gt;
        ///    &lt;li&gt;The produced units must be paid for.&lt;/li&gt;
        ///    &lt;li&gt;A space dock cannot be placed on a planet already containing a space dock.&lt;/li&gt;
        ///    &lt;li&gt;An ability that puts a space dock on the game board by &amp;ldquo;replacing&amp;rdquo;, rather than &amp;ldquo;placing&amp;rdquo;, such as the &lt;i&gt;Infiltrate&lt;/i&gt; action card, will trigger &lt;i&gt;Minister of Industry&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MinisterOfIndustry {
            get {
                return ResourceManager.GetString("MinisterOfIndustry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Once a player resolves the ability of &lt;i&gt;Minister of Peace&lt;/i&gt;, the active player cannot use any &amp;ldquo;after you activate a system&amp;rdquo; abilities.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Other players, including the &lt;i&gt;Minister of Peace&lt;/i&gt; player, cannot use any &amp;ldquo;after another player activates a system that&amp;hellip;&amp;rdquo; abilities.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The active player may still use any &amp;ldquo;at the end of your turn&amp;rdquo; abilities when their turn is ended by &lt;i&gt;Minister of Peace&lt;/i&gt;.&lt;/li&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MinisterOfPeace {
            get {
                return ResourceManager.GetString("MinisterOfPeace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The owner of &lt;i&gt;Minister of Policy&lt;/i&gt; will draw action cards during the &lt;b&gt;Draw Action Cards&lt;/b&gt; step of the status phase, and again at the end of the status phase.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If the Yssaril player owns &lt;i&gt;Minister of Policy&lt;/i&gt;, they will use their &lt;sc&gt;Scheming&lt;/sc&gt; ability for both the &lt;b&gt;Draw Action Cards&lt;/b&gt; step and for &lt;i&gt;Minister of Policy&lt;/i&gt;. However, they do not draw all the cards together; they must fully resolve &lt;sc&gt;Scheming&lt;/sc&gt; by discarding an action card fo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MinisterOfPolicy {
            get {
                return ResourceManager.GetString("MinisterOfPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MinisterOfSciences {
            get {
                return ResourceManager.GetString("MinisterOfSciences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Effects that trigger at the start or end of a player&amp;rsquo;s turn will not trigger between each of those player&amp;rsquo;s action.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MinisterOfWar {
            get {
                return ResourceManager.GetString("MinisterOfWar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MinorEntropicField {
            get {
                return ResourceManager.GetString("MinorEntropicField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Mirage {
            get {
                return ResourceManager.GetString("Mirage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If &lt;i&gt;Miscount Disclosed&lt;/i&gt; is revealed when only one law is in play, players may only vote for that law or abstain. If no votes are cast, the speaker must decide for that law to be elected.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Players may still play riders if only one law is in play.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The elected law remains in play, and remains elected to the same object if applicable, while it is being voted on.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;If &lt;i&gt;Articles of War&lt;/i&gt; is elected by &lt;i&gt;Miscount Dis [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MiscountDisclosed {
            get {
                return ResourceManager.GetString("MiscountDisclosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MonopolizeProduction {
            get {
                return ResourceManager.GetString("MonopolizeProduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The +1 will apply to any rerolls during the combat round.&lt;/li&gt;
        ///    &lt;li&gt;A second &lt;i&gt;Morale Boost&lt;/i&gt; cannot be played during a combat round to give +2 to the combat rolls of a player&amp;rsquo;s units.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Morale Boost&lt;/i&gt; has no effect on anti&amp;ndash;fighter barrage rolls.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string MoraleBoost {
            get {
                return ResourceManager.GetString("MoraleBoost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &amp;ldquo;For&amp;rdquo; outcome of &lt;i&gt;Mutiny&lt;/i&gt; is resolved, players gain victory points in speaker order.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Mutiny {
            get {
                return ResourceManager.GetString("Mutiny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The attached planet will not have a corresponding legendary planet ability card. However, it will be legendary for effects such as scoring the &lt;i&gt;Make History&lt;/i&gt; and similar objectives, transferring the &lt;i&gt;Shard of the Throne&lt;/i&gt; relic, and the Winnu player&apos;s commander. The attached planet will also no longer be non&amp;ndash;legendary for effects such as the &lt;i&gt;Stellar Converter&lt;/i&gt; relic.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string NanoForge {
            get {
                return ResourceManager.GetString("NanoForge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Wormholes are not anomalies.&lt;/li&gt;
        ///    &lt;li&gt;An anomaly will retain its regular effect if a player retreats.&lt;/li&gt;
        ///    &lt;li&gt;A player may move ships though or into an asteroid field without the &lt;i&gt;Antimass Deflectors&lt;/i&gt; technology. After moving into, those ships may remain there and move out during a later action without harm.&lt;/li&gt;
        ///    &lt;li&gt;A player may move ships though or out of a gravity rift without rolling for removal. Those ships will not get +1 to their move value.&lt;/li&gt;
        ///    &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NavSuite {
            get {
                return ResourceManager.GetString("NavSuite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The trade goods must be spent during the status phase. Any trade goods that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string NegotiateTradeRoutes {
            get {
                return ResourceManager.GetString("NegotiateTradeRoutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Neural Motivator&lt;/i&gt; does not apply when a player draws action cards from either of the abilities of the &lt;i&gt;Politics&lt;/i&gt; action card, or any other effect outside of the status phase.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Neural Motivator&lt;/i&gt; only applies to the &lt;b&gt;Draw Action Card&lt;/b&gt; step of the status phase. It does not apply when a player draws action cards due to the effect of the &lt;i&gt;Minister of Policy&lt;/i&gt; law or similar effects.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string NeuralMotivator {
            get {
                return ResourceManager.GetString("NeuralMotivator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player controls planets in another player&amp;rsquo;s home system, those planets are not exhausted by the &amp;ldquo;For&amp;rdquo; outcome of &lt;i&gt;New Constitution&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string NewConstitution {
            get {
                return ResourceManager.GetString("NewConstitution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The effect of the &lt;i&gt;Nexus Sovereignty&lt;/i&gt; law does not affect the Creuss player.&lt;/li&gt;
        ///    &lt;li&gt;When the &lt;i&gt;Nexus Sovereignty&lt;/i&gt; law is in play, units cannot move through the alpha and beta wormholes in the wormhole nexus, even by effects that move ships outside of the movement step of a tactical action, such as while retreating.&lt;/li&gt;
        ///    &lt;li&gt;When the &lt;i&gt;Nexus Sovereignty&lt;/i&gt; law is in play, hits may still be produced against ships in the active system by units with the &lt;sc&gt;Deep [rest of string was truncated]&quot;;.
        /// </summary>
        public static string NexusSovereignty {
            get {
                return ResourceManager.GetString("NexusSovereignty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The Saar player&amp;rsquo;s Floating Factories are never on a planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string OccupyTheFringe {
            get {
                return ResourceManager.GetString("OccupyTheFringe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string OccupyTheSeatOfTheEmpire {
            get {
                return ResourceManager.GetString("OccupyTheSeatOfTheEmpire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string OrbitalFoundries {
            get {
                return ResourceManager.GetString("OrbitalFoundries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ParadiseWorld {
            get {
                return ResourceManager.GetString("ParadiseWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player commits ground forces to multiple planets, &lt;i&gt;Parley&lt;/i&gt; will affect those ground forces on only one.&lt;/li&gt;
        ///    &lt;li&gt;The returned ground forces cannot be committed to another planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Parley {
            get {
                return ResourceManager.GetString("Parley", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of units in the system is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;A system that contains a planet destroyed by the &lt;i&gt;Stellar Converter&lt;/i&gt; relic, and no other planets, is considered to contain no planets.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string PatrolVastTerritories {
            get {
                return ResourceManager.GetString("PatrolVastTerritories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot play &lt;i&gt;Plagiarize&lt;/i&gt; if they have less than five influence available.&lt;/li&gt;
        ///    &lt;li&gt;A player does not need to meet the prerequisites of the technology they gain from &lt;i&gt;Plagiarize&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;The active player must announce which technology they are gaining before other players decide whether to play a &lt;i&gt;Sabotage&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;If a faction has a faction&amp;ndash;specific unit upgrade as one of their faction technologies, they cannot use &lt;i&gt;Plagiarize&lt;/i [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Plagiarize {
            get {
                return ResourceManager.GetString("Plagiarize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A planet with zero infantry on it may be targeted by &lt;i&gt;Plague&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Plague {
            get {
                return ResourceManager.GetString("Plague", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Only one additional dice is rolled for each bombardment or space cannon roll, regardless of how many units are using that ability.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;During an invasion in a system with multiple planets, only one unit will add a dice to its bombardment roll.&lt;/li&gt;
        ///        &lt;li&gt;During an invasion, if ground forces have been committed to multiple planets, &lt;i&gt;Plasma Scoring&lt;/i&gt; will add an additional dice to the space cannon rolls for each planet during the &lt;b&gt;Space Cannon De [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PlasmaScoring {
            get {
                return ResourceManager.GetString("PlasmaScoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;When a player is elected for &lt;i&gt;Political Censure&lt;/i&gt;, they may play the &lt;i&gt;Confusing Legal Text&lt;/i&gt; or &lt;i&gt;Deadly Plot&lt;/i&gt; action cards before it resolves.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string PoliticalCensure {
            get {
                return ResourceManager.GetString("PoliticalCensure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player may still use abilities from their faction technology, leaders, or mechs after their &lt;i&gt;Political Secret&lt;/i&gt; has been played.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If a player has had their &lt;i&gt;Political Secret&lt;/i&gt; played, other players may still use that player&amp;rsquo;s other promissory notes.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;If an agenda is discarded, each &lt;i&gt;Political Secret&lt;/i&gt; that has been played is returned. The affected players may vote on the next agenda as normal.&lt;/li&gt;
        ///    &lt;li&gt;The effect of &lt;i&gt;Po [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PoliticalSecret {
            get {
                return ResourceManager.GetString("PoliticalSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;During the upcoming agenda phase, all abilities remain resolved in speaker order, not initiative order.&lt;/li&gt;
        ///    &lt;li&gt;The strategy cards are readied when &lt;i&gt;Political Stability&lt;/i&gt; is played.&lt;/li&gt;
        ///    &lt;li&gt;The &amp;ldquo;Return Strategy Cards&amp;rdquo; step is the last step of the status phase. All other steps must be completed by all players before &lt;i&gt;Political Stability&lt;/i&gt; may be played. This includes scoring and revealing objectives, drawing action cards (and discarding down to hand  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PoliticalStability {
            get {
                return ResourceManager.GetString("PoliticalStability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After playing a &lt;i&gt;Politics Rider&lt;/i&gt;, a player may use additional abilities, including playing other rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any other riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Politics Rider&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play a &lt;i&gt;Politics Rider&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string PoliticsRider {
            get {
                return ResourceManager.GetString("PoliticsRider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of units in the system is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;A ship, ground force, or structure will all qualify for &lt;i&gt;Populate the Outer Rim&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If one player has a ground force or structure on a planet in a qualifying system, and another player has a ship in the same system, both players may count the system towards the requirements of &lt;i&gt;Populate the Outer Rim&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The units may be in another player&amp;rsquo;s home [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PopulateTheOuterRim {
            get {
                return ResourceManager.GetString("PopulateTheOuterRim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Neither ability of &lt;i&gt;Predictive Intelligence&lt;/i&gt; may be used if it is exhausted.&lt;/li&gt;
        ///    &lt;li&gt;If a player removes any tokens from their fleet pool, they will need to meet their new fleet pool limits before any other effects may resolve.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string PredictiveIntelligence {
            get {
                return ResourceManager.GetString("PredictiveIntelligence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of units in the system is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ProduceEnMasse {
            get {
                return ResourceManager.GetString("ProduceEnMasse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Other effects that produce units without a unit using its &lt;sc&gt;Production&lt;/sc&gt; ability will not cause &lt;i&gt;Prophecy of Ixth&lt;/i&gt; to be discarded.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ProphecyOfIxth {
            get {
                return ResourceManager.GetString("ProphecyOfIxth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string PropulsionResearchFacility {
            get {
                return ResourceManager.GetString("PropulsionResearchFacility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of structures on the planet is irrelevant, if there is at least one.&lt;/li&gt;
        ///    &lt;li&gt;The structures may be on planets in another player&amp;rsquo;s home system.&lt;/li&gt;
        ///    &lt;li&gt;The Saar player&amp;rsquo;s Floating Factories cannot be used to score &lt;i&gt;Protect the Border&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ProtectTheBorder {
            get {
                return ResourceManager.GetString("ProtectTheBorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Prove Endurance&lt;/i&gt; is scored when the player passes during the action phase. They may then score another secret objective in the status phase immediately following.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ProveEndurance {
            get {
                return ResourceManager.GetString("ProveEndurance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;When researching a technology, each planet with a technology speciality can only be used to ignore a single prerequisite.&lt;/li&gt;
        ///    &lt;li&gt;Exhausting planets to gain trade goods can be done at any time during action phase, except when another ability is being resolved. For example, if a player has one of their planets with a technology specialty targeted with the &lt;i&gt;Uprising&lt;/i&gt; action card, they cannot use &lt;i&gt;Psychoarchaeology&lt;/i&gt; in response to gain a trade good.&lt;/li&gt;
        ///    &lt;li&gt;If m [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Psychoarchaeology {
            get {
                return ResourceManager.GetString("Psychoarchaeology", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the originally chosen strategy card has trade goods on it, those will not be taken if &lt;i&gt;Public Disgrace&lt;/i&gt; is played.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Public Disgrace&lt;/i&gt; may only be played during the regular choosing of a strategy card during the strategy phase. It cannot be played when other effects cause a player to take a strategy card, such as the &lt;i&gt;Imperial Arbiter&lt;/i&gt; strategy card.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string PublicDisgrace {
            get {
                return ResourceManager.GetString("PublicDisgrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string PublicExecution {
            get {
                return ResourceManager.GetString("PublicExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &lt;i&gt;Publicize Weapon Schematics&lt;/i&gt; law is in play, and a player is the first to gain the war sun unit upgrade technology, from then on, prerequisites for the war sun unit upgrade technology will be ignored.&lt;/li&gt;
        ///    &lt;li&gt;If the Muaat does not own their Prototype War Sun II faction unit upgrade technology, they do not own a war sun technology.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;If the &lt;i&gt;Publicize Weapon Schematics&lt;/i&gt; law is in play, the Muaat player will not cause prerequisites f [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PublicizeWeaponSchematics {
            get {
                return ResourceManager.GetString("PublicizeWeaponSchematics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string PublicObjectives {
            get {
                return ResourceManager.GetString("PublicObjectives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player has units or controls a planet in a system containing an alpha wormhole, and the Creuss player has units or controls a planet in a system containing a beta wormhole, or vice versa, those two players are neighbors.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string PushBoundaries {
            get {
                return ResourceManager.GetString("PushBoundaries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RaiseAFleet {
            get {
                return ResourceManager.GetString("RaiseAFleet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Rally {
            get {
                return ResourceManager.GetString("Rally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot destroy their own space dock with &lt;i&gt;Reactor Meltdown&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;At least one space dock belonging to another player must exist on the game board in a non&amp;ndash;home system for a player to play and resolve &lt;i&gt;Reactor Meltdown&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;If a player owns a space dock in another player&amp;rsquo;s home system, that space dock cannot be targeted by &lt;i&gt;Reactor Meltdown&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;A space dock in an eliminated player&amp;rsquo;s home system cannot be [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ReactorMeltdown {
            get {
                return ResourceManager.GetString("ReactorMeltdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player that controls no planets in their home system will not place a mech if the &amp;ldquo;For&amp;rdquo; outcome of Rearmament Agreement is resolved.&lt;/li&gt;
        ///    &lt;li&gt;If a player wishes to place a mech, but there are none in their reinforcements, they may remove a mech from any system that does not contain one of their command tokens and place that instead. The mech will be placed undamaged.&lt;/li&gt;
        ///    &lt;li&gt;A player that has no mechs on the game board is unaffected by the &amp;ldquo;Against&amp;r [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RearmamentAgreement {
            get {
                return ResourceManager.GetString("RearmamentAgreement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The number of attachments a planet has is irrelevant, if it has at least one.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ReclaimAncientMonuments {
            get {
                return ResourceManager.GetString("ReclaimAncientMonuments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must have at least one infantry on the game board to play and resolve &lt;i&gt;Refit Troops&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;If a player has no mechs left in their reinforcements, they may remove a mech from any system that does not contain one of their command tokens and place that instead. The mech will be placed undamaged.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RefitTroops {
            get {
                return ResourceManager.GetString("RefitTroops", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If &lt;i&gt;Reflective Shielding&lt;/i&gt; is played after a ship uses its &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability during an &lt;b&gt;Assign Hits&lt;/b&gt; step, then the hits produced by &lt;i&gt;Reflective Shielding&lt;/i&gt; are added to any other hits produced in the immediately proceeding &lt;b&gt;Roll Dice&lt;/b&gt; step.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;A unit that used its &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability to cancel some of those other hits, and been repaired, cannot use is &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability again to cancel the hits produced by &lt;i [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ReflectiveShielding {
            get {
                return ResourceManager.GetString("ReflectiveShielding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RegulatedConscription {
            get {
                return ResourceManager.GetString("RegulatedConscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Reparations&lt;/i&gt; may be played by a player with no exhausted planets, or when when they lose control to a player with no readied planets.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;&lt;i&gt;Reparations&lt;/i&gt; cannot be played by a player with no exhausted planets when they lost control to a player with no readied planets.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Reparations {
            get {
                return ResourceManager.GetString("Reparations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;There must be at least one law in play for a player to play and resolve &lt;i&gt;Repeal Law&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RepealLaw {
            get {
                return ResourceManager.GetString("RepealLaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RepresentativeGovernment {
            get {
                return ResourceManager.GetString("RepresentativeGovernment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RepresentativeGovernmentProphecyOfKings {
            get {
                return ResourceManager.GetString("RepresentativeGovernmentProphecyOfKings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player may gain any technology, regardless of the number of command tokens in their fleet pool.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If a player must remove more command tokens than they have in their fleet pool, they remove all their command tokens from their fleet pool instead.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ResearchGrantReallocation {
            get {
                return ResourceManager.GetString("ResearchGrantReallocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The agenda card, not the planet, is exhausted to ignore the prerequisite.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ResearchTeamBiotic {
            get {
                return ResourceManager.GetString("ResearchTeamBiotic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The agenda card, not the planet, is exhausted to ignore the prerequisite.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ResearchTeamCybernetic {
            get {
                return ResourceManager.GetString("ResearchTeamCybernetic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The agenda card, not the planet, is exhausted to ignore the prerequisite.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ResearchTeamPropulsion {
            get {
                return ResourceManager.GetString("ResearchTeamPropulsion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The agenda card, not the planet, is exhausted to ignore the prerequisite.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ResearchTeamWarfare {
            get {
                return ResourceManager.GetString("ResearchTeamWarfare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must still meet the prerequisites for the technology they research.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot play &lt;i&gt;Reveal Prototype&lt;/i&gt; if they have less than four resources available.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot play &lt;i&gt;Reveal Prototype&lt;/i&gt; if they already own the unit upgrade technology for each unit they have in the combat.&lt;/li&gt;
        ///    &lt;li&gt;Other players must decide whether to play &lt;i&gt;Sabotage&lt;/i&gt; before the player playing &lt;i&gt;Reveal Prototype&lt;/i&gt; announces which technology they  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RevealPrototype {
            get {
                return ResourceManager.GetString("RevealPrototype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Reverse Engineer&lt;/i&gt; may be played if the action card is discarded after being played or cancelled, if it is discarded due to hand size limits, or if it is discarded for another game effect.&lt;/li&gt;
        ///    &lt;li&gt;It is public knowlege which action cards a player takes using &lt;i&gt;Reverse Engineer&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ReverseEngineer {
            get {
                return ResourceManager.GetString("ReverseEngineer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A &lt;i&gt;Valefar Assimilator&lt;/i&gt; technology will count if it is currently copying another player&amp;rsquo;s faction unit upgrade technology.&lt;/li&gt;
        ///    &lt;li&gt;If the Nekro player owns both a generic unit upgrade technology and a faction unit upgrade technology of the same type, only the faction unit upgrade technology will count for &lt;i&gt;Revolutionize Warfare&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RevolutionizeWarfare {
            get {
                return ResourceManager.GetString("RevolutionizeWarfare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RichWorld {
            get {
                return ResourceManager.GetString("RichWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player that controls zero planets may play &lt;i&gt;Rise of a Messiah&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string RiseOfAMessiah {
            get {
                return ResourceManager.GetString("RiseOfAMessiah", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot announce a retreat if there is not at least one eligible system to retreat to.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot announce a retreat from the space combat initiated by the Mahact player&amp;rsquo;s &lt;i&gt;Benediction&lt;/i&gt; hero ability.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Rout {
            get {
                return ResourceManager.GetString("Rout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player will qualify for &lt;i&gt;Rule Distant Lands&lt;/i&gt; if they can select two home systems other than their own, and they control a planet in or adjacent to each of those systems.&lt;/li&gt;
        ///    &lt;li&gt;The planets may meet the criteria by being adjacent to an eliminated player&amp;rsquo;s home system.&lt;/li&gt;
        ///    &lt;li&gt;If a player controls a single planet in a home system that is adjacent to another home system via the use of wormholes, that planet alone will not qualify them for &lt;i&gt;Rule Distant Lan [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RuleDistantLands {
            get {
                return ResourceManager.GetString("RuleDistantLands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player has a second copy of an action card, they may play it if the first was cancelled by &lt;i&gt;Sabotage&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;If an action card is cancelled by &lt;i&gt;Sabotage&lt;/i&gt;, no costs are paid.&lt;/li&gt;
        ///    &lt;li&gt;A player playing an action card announces the following before &lt;i&gt;Sabotage&lt;/i&gt; may be played:&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;Any targeted planets, system, units, players, cards, outcomes, and/or other such objects.&lt;/li&gt;
        ///        &lt;li&gt;The value of any variable cost to be paid.&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Sabotage {
            get {
                return ResourceManager.GetString("Sabotage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The active player may perform transactions after &lt;i&gt;Salvage&lt;/i&gt; is played and before it resolves.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Salvage {
            get {
                return ResourceManager.GetString("Salvage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After playing a &lt;i&gt;Sanction&lt;/i&gt;, a player may use additional abilities, including playing rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Sanction&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play a &lt;i&gt;Sanction&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Sanction {
            get {
                return ResourceManager.GetString("Sanction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If units are produced without any unit using its &lt;sc&gt;Production&lt;/sc&gt; ability, &lt;i&gt;Sarween Tools&lt;/i&gt; will not provide a reduction to the cost.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SarweenTools {
            get {
                return ResourceManager.GetString("SarweenTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The units must be on the planet before the &lt;b&gt;Movement&lt;/b&gt; step of the tactical action.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ScanlinkDroneNetwork {
            get {
                return ResourceManager.GetString("ScanlinkDroneNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player has no command tokens in their reinforcements, they cannot resolve the ability of &lt;i&gt;Scepter of Emelpar&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;The &lt;i&gt;Scepter of Emelpar&lt;/i&gt; may be used whenever a command token would be spent from a player&amp;rsquo;s strategy pool. This includes when spending to perform the secondary ability of a strategy card, for faction abilities, and when scoring objectives.&lt;/li&gt;
        ///    &lt;li&gt;If the Muaat player uses the ability of the &lt;i&gt;Scepter of Emelpar&lt;/i&gt;, they will be  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ScepterOfEmelpar {
            get {
                return ResourceManager.GetString("ScepterOfEmelpar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ScorchedDepot {
            get {
                return ResourceManager.GetString("ScorchedDepot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ScrambleFrequency {
            get {
                return ResourceManager.GetString("ScrambleFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must have at least one non&amp;ndash;fighter ship on the game board to play and resolve &lt;i&gt;Scuttle&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Scuttle {
            get {
                return ResourceManager.GetString("Scuttle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player with three scored secret objectives may draw a fourth. However, they must immediately shuffle it into the secret objective deck.&lt;/li&gt;
        ///    &lt;li&gt;If the elected player has three secret objective cards, and they would draw another, the drawn secret objective card is reveal before that player chooses which card to discard. This applies both when the elected player initially draws the secret objective cards from the effect of &lt;i&gt;Search Warrant&lt;/i&gt; when they are elected, and if  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SearchWarrant {
            get {
                return ResourceManager.GetString("SearchWarrant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If multiple players have the most or fewest victory points, they gain victory points in speaker order.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SeedOfAnEmpire {
            get {
                return ResourceManager.GetString("SeedOfAnEmpire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SeedySpaceport {
            get {
                return ResourceManager.GetString("SeedySpaceport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SeizeAnIcon {
            get {
                return ResourceManager.GetString("SeizeAnIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must have at least one neighbor with at least one relic fragment to play and resolve &lt;i&gt;Seize Artifact&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SeizeArtifact {
            get {
                return ResourceManager.GetString("SeizeArtifact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If multiple mechs are destroyed, the trade goods are gained one at a time.&lt;/li&gt;
        ///    &lt;li&gt;A mech cannot be placed in a space area with &lt;i&gt;Self&amp;ndash;Assembly Routines&lt;/i&gt;, and so cannot be placed in a system that does not contain a planet.&lt;/li&gt;
        ///    &lt;li&gt;If a player wishes to place a mech, but there are none left in their reinforcements, they may remove a mech from any system that does not contain one of their command tokens and place that instead. The mech will be placed undamaged. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SelfAssemblyRoutines {
            get {
                return ResourceManager.GetString("SelfAssemblyRoutines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SenateSanctuary {
            get {
                return ResourceManager.GetString("SenateSanctuary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &lt;i&gt;Shard of the Throne (AGENDA)&lt;/i&gt; law is discarded, no player loses a victory point.&lt;/li&gt;
        ///    &lt;/ol&gt;
        ///    &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;When the player that owns the &lt;i&gt;Shard of the Throne (RELIC)&lt;/i&gt; loses control of a legendary planet or a planet in their home system, they immediately give it to the player who gained control of that planet. No abilities may be resolved before this.&lt;/li&gt;
        ///    &lt;li&gt;If the player that gains &lt;i&gt;Shard of the Throne (RELIC)&lt;/i&gt; controls no legend [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ShardOfTheThrone {
            get {
                return ResourceManager.GetString("ShardOfTheThrone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the &lt;i&gt;Shared Research&lt;/i&gt; law is in play, a player still cannot move into a nebula unless it is the active system.&lt;/li&gt;
        ///    &lt;li&gt;If the &lt;i&gt;Shared Research&lt;/i&gt; law is in play, a ship that begins the &lt;b&gt;Movement&lt;/b&gt; step of a tactical action in a nebula still treats its move value as one for the duration of that step.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SharedResearch {
            get {
                return ResourceManager.GetString("SharedResearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Shields Holding&lt;/i&gt; cannot be used to cancel hits produced by &lt;sc&gt;Space Cannon&lt;/sc&gt; abilities.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Shields Holding&lt;/i&gt; cannot be used to prevent an effect that directly destroys a unit.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Shields Holding&lt;/i&gt; cannot be used during ground combat.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Shields Holding&lt;/i&gt; may be used to cancel hits produced by any ability during combat.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;&lt;i&gt;Shields Holding&lt;/i&gt; may be used to cancel hits produced by an anti&amp;ndash;fighter barr [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ShieldsHolding {
            get {
                return ResourceManager.GetString("ShieldsHolding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The Mecatol Rex system may be chosen.&lt;/li&gt;
        ///    &lt;li&gt;A command token cannot be placed in an eliminated player&amp;rsquo;s home system.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SignalJamming {
            get {
                return ResourceManager.GetString("SignalJamming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Using &lt;i&gt;Skilled Retreat&lt;/i&gt; is not a retreat. As such, it cannot be cancelled with the &lt;i&gt;Intercept&lt;/i&gt; action card.&lt;/li&gt;
        ///    &lt;li&gt;A player may use &lt;i&gt;Skilled Retreat&lt;/i&gt; to move into a system that does not contain their ships, as long as it does not contain another player&amp;rsquo;s ships.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot use &lt;i&gt;Skilled Retreat&lt;/i&gt; to move into a nebula.&lt;/li&gt;
        ///    &lt;li&gt;Fighters are moved without being transported. Ground forces may be transported.&lt;/li&gt;
        ///    &lt;li&gt;After m [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SkilledRetreat {
            get {
                return ResourceManager.GetString("SkilledRetreat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The produced unit must be paid for.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Sling Relay&lt;/i&gt; cannot be used without producing a unit.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SlingRelay {
            get {
                return ResourceManager.GetString("SlingRelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The active player may still use the &lt;sc&gt;Space Cannon&lt;/sc&gt; ability of their units.&lt;/li&gt;
        ///    &lt;li&gt;During the &lt;b&gt;Space Cannon Defense&lt;/b&gt; step of an invasion during the same tactical action, other players may use the &lt;sc&gt;Space Cannon&lt;/sc&gt; ability of their units.&lt;/li&gt;
        ///    &lt;li&gt;Another player cannot play &lt;i&gt;Experimental Battlestation&lt;/i&gt; during this tactical action.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SolarFlare {
            get {
                return ResourceManager.GetString("SolarFlare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player that currently outright has the most victory points cannot score &lt;i&gt;Spark a Rebellion&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;If multiple players are tied for the most victory points, &lt;i&gt;Spark a Rebellion&lt;/i&gt; may be scored by winning a combat against any of them.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;&lt;i&gt;Spark a Rebellion&lt;/i&gt; may be scored by winning a combat against a player with zero victory points if all players have zero victory points.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SparkARebellion {
            get {
                return ResourceManager.GetString("SparkARebellion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Spy&lt;/i&gt; cannot target a player with zero action cards in their hand.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Spy {
            get {
                return ResourceManager.GetString("Spy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string StakeYourClaim {
            get {
                return ResourceManager.GetString("StakeYourClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string StarChart {
            get {
                return ResourceManager.GetString("StarChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string StarChartCultural {
            get {
                return ResourceManager.GetString("StarChartCultural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string StarChartHazardous {
            get {
                return ResourceManager.GetString("StarChartHazardous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string StarChartIndustrial {
            get {
                return ResourceManager.GetString("StarChartIndustrial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string StarfallArray {
            get {
                return ResourceManager.GetString("StarfallArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The chosen planet must be in a system adjacent to the unit with &lt;sc&gt;bombardment&lt;/sc&gt;; the planet and unit cannot both be in the same system.&lt;/li&gt;
        ///    &lt;li&gt;A system that contains a planet destroyed by &lt;i&gt;Stellar Converter&lt;/i&gt;, and no other planets, is considered to contain no planets.&lt;/li&gt;
        ///    &lt;li&gt;A player cannot target a planet they control with &lt;i&gt;Stellar Converter&lt;/i&gt;.&lt;/li&gt; 
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string StellarConverter {
            get {
                return ResourceManager.GetString("StellarConverter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The following promissory notes qualify for scoring Strengthen Bonds:&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;&lt;i&gt;Alliance&lt;/i&gt;.&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Support for the Throne&lt;/i&gt;.&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Stymie&lt;/i&gt; (Arborec).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Trade Convoys&lt;/i&gt; (Hacan).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Dark Pact&lt;/i&gt; (Empyrean).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Blood Pact&lt;/i&gt; (Empyrean).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Promise of Protection&lt;/i&gt; (Mentak).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Gift of Prescience&lt;/i&gt; (Naalu).&lt;/li&gt;
        ///        &lt;li&gt;&lt;i&gt;Antiv [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StrengthenBonds {
            get {
                return ResourceManager.GetString("StrengthenBonds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The planets cannot be in any player&amp;rsquo;s home system, including those of eliminiated players.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SubdueTheGalaxy {
            get {
                return ResourceManager.GetString("SubdueTheGalaxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Summit {
            get {
                return ResourceManager.GetString("Summit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A &lt;i&gt;Support For The Throne&lt;/i&gt; must be played by the receiving player as soon as it is received. It cannot be kept secret.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If the active player receives a &lt;i&gt;Support For The Throne&lt;/i&gt;, they cannot then attempt to trade it with another player. It must be played immediately.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;&lt;i&gt;Support For The Throne&lt;/i&gt; is returned when the system is activated, even if the active player will perform no hostile acts towards the other player this turn.&lt;/li&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SupportForTheThrone {
            get {
                return ResourceManager.GetString("SupportForTheThrone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;`.
        /// </summary>
        public static string SuspiciousWreckage {
            get {
                return ResourceManager.GetString("SuspiciousWreckage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The influence must be spent during the status phase. Any influence that were spent during the action phase will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;Trade goods may be spent as influence when scoring &lt;i&gt;Manipulate Galactic Law&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SwayTheCouncil {
            get {
                return ResourceManager.GetString("SwayTheCouncil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Mechs are ignored by the &amp;ldquo;For&amp;rdquo; effect of &lt;i&gt;Swords to Plowshares.&lt;/i&gt;&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string SwordsToPlowshares {
            get {
                return ResourceManager.GetString("SwordsToPlowshares", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player must have at least one unit with the &lt;sc&gt;Bombardment&lt;/sc&gt; ability to play and resolve &lt;i&gt;Tactical Bombardment&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;A player may select a system that contains zero readied planets controlled by other players.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TacticalBombardment {
            get {
                return ResourceManager.GetString("TacticalBombardment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After playing a &lt;i&gt;Technology Rider&lt;/i&gt;, a player may use additional abilities, including playing other rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any other riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Technology Rider&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play a &lt;i&gt;Technology Rider&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;A player must still meet the prerequisites for the technology [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TechnologyRider {
            get {
                return ResourceManager.GetString("TechnologyRider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TerraformingInitiative {
            get {
                return ResourceManager.GetString("TerraformingInitiative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The action card discard is shuffled to form a new action card deck as soon as the action card deck has zero cards in it.&lt;/li&gt;
        ///    &lt;li&gt;It is public knowledge which action cards a player takes using &lt;i&gt;The Codex&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TheCodex {
            get {
                return ResourceManager.GetString("TheCodex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If &lt;i&gt;The Crown of Emphidia&lt;/i&gt; law is discarded, no player loses a victory point.&lt;/li&gt;
        ///    &lt;li&gt;If the player that gains &lt;i&gt;The Crown of Emphidia&lt;/i&gt; controls no planets in their home system, they cannot lose it.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TheCrownOfEmphidia {
            get {
                return ResourceManager.GetString("TheCrownOfEmphidia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player may only reroll combat rolls with &lt;i&gt;The Crown of Thalnos&lt;/i&gt;. They cannot reroll anti&amp;ndash;fighter barrage rolls and similar.&lt;/li&gt;
        ///    &lt;li&gt;If a unit rolls multiple dice, it will not be destroyed if it produces at least one hit from its original roll, and that dice is not rerolled, even if it produces no hits from its reroll.&lt;/li&gt;
        ///    &lt;li&gt;A reroll caused by any other effect will not cause a unit to be destroyed.&lt;/li&gt;
        ///    &lt;li&gt;Units destroyed by &lt;i&gt;The Crown of Thalnos&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TheCrownOfThalnos {
            get {
                return ResourceManager.GetString("TheCrownOfThalnos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TheObsidian {
            get {
                return ResourceManager.GetString("TheObsidian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot use the ability of &lt;i&gt;The Prophet&amp;rsquo;s Tears&lt;/i&gt; when they directly gain a technology.&lt;/li&gt;
        ///    &lt;li&gt;The Nekro player may use the ability of &lt;i&gt;The Prophet&amp;rsquo;s Tears&lt;/i&gt; to draw an action card when they would have researched a technology.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TheProphetsTears {
            get {
                return ResourceManager.GetString("TheProphetsTears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;Any ships in another players home system are irrelevant.&lt;/li&gt;
        ///    &lt;li&gt;The ships may be adjacent to the home system of an eliminated player.&lt;/li&gt;
        ///    &lt;li&gt;Any ground forces or structures are irrelevant.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string ThreatenEnemies {
            get {
                return ResourceManager.GetString("ThreatenEnemies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TombOfEmphidia {
            get {
                return ResourceManager.GetString("TombOfEmphidia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player has their maximum number of commodities, and is instructed to replenish their commodities, they will take no commodities. However, that player&amp;rsquo;s &lt;i&gt;Trade Agreement&lt;/i&gt; may be played.&lt;/li&gt;
        ///    &lt;li&gt;A player does not have to be neighbors with the player that plays their &lt;i&gt;Trade Agreement&lt;/i&gt; to give them their commodities.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Trade Agreement&lt;/i&gt; cannot be played when a player gains commodities, only when they replenish commodities.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TradeAgreement {
            get {
                return ResourceManager.GetString("TradeAgreement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After playing a &lt;i&gt;Trade Rider&lt;/i&gt;, a player may use additional abilities, including playing other rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any other riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Trade Rider&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play a &lt;i&gt;Trade Rider&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TradeRider {
            get {
                return ResourceManager.GetString("TradeRider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;When resolving the ability of &lt;i&gt;Transit Diodes&lt;/i&gt;, that player may remove ground forces from a system containing their command token.&lt;/li&gt;
        ///    &lt;li&gt;The ground forces may be removed from on a planet or from in a space area.&lt;/li&gt;
        ///    &lt;li&gt;The ground forces may be removed from different systems.&lt;/li&gt;
        ///    &lt;li&gt;The ground forces may be placed on different planets.&lt;/li&gt;
        ///    &lt;li&gt;If a mech is damaged when it is removed, it will remain damaged when it is placed.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TransitDiodes {
            get {
                return ResourceManager.GetString("TransitDiodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the last ship is destroyed using a &lt;i&gt;Direct Hit&lt;/i&gt; action card, &lt;i&gt;Turn Their Fleets to Dust&lt;/i&gt; cannot be scored.&lt;/li&gt;
        ///    &lt;li&gt;If a player still has fighters in a system after assigning all hits produced during &lt;b&gt;Space Cannon Offense&lt;/b&gt; step, but is forced to remove all of them to meet capacity limits, &lt;i&gt;Turn Their Fleets to Dust&lt;/i&gt; cannot be scored.&lt;/li&gt;
        ///    &lt;li&gt;If a player&amp;rsquo;s last ship in a system is destroyed, but an ability allows that player to then place shi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TurnTheirFleetsToDust {
            get {
                return ResourceManager.GetString("TurnTheirFleetsToDust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If the last ship is destroyed using a &lt;i&gt;Direct Hit&lt;/i&gt; action card, &lt;i&gt;Turn Their Fleets to Dust &amp;Omega;&lt;/i&gt; may be scored.&lt;/li&gt;
        ///    &lt;li&gt;If a player still has fighters in a system after assigning all hits produced during &lt;b&gt;Space Cannon Offense&lt;/b&gt; step, &lt;i&gt;Turn Their Fleets to Dust &amp;Omega;&lt;/i&gt; may be scored.&lt;/li&gt;
        ///    &lt;li&gt;If a player&amp;rsquo;s last ship in a system is destroyed, but an ability allows that player to then place ships into that system, &lt;i&gt;Turn Their Fleets to Dust &amp; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TurnTheirFleetsToDustOmega {
            get {
                return ResourceManager.GetString("TurnTheirFleetsToDustOmega", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string TwilightMirror {
            get {
                return ResourceManager.GetString("TwilightMirror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string UnconventionalMeasures {
            get {
                return ResourceManager.GetString("UnconventionalMeasures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Unexpected Action&lt;/i&gt; cannot be played by a player with zero command tokens on the game board.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string UnexpectedAction {
            get {
                return ResourceManager.GetString("UnexpectedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string UnifyTheColonies {
            get {
                return ResourceManager.GetString("UnifyTheColonies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player cannot purge three Unknown Relic Fragments to gain a relic. At least one cultural, hazardous or industrial relic fragment must be purged.&lt;/li&gt;
        ///    &lt;li&gt;If an eliminated player had any Unknown Relic Fragments, they are discarded to the frontier exploration discard pile.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string UnknownRelicFragment {
            get {
                return ResourceManager.GetString("UnknownRelicFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player may select an exhausted planet, and they may select a planet with fewer than three infantry on it (including zero).&lt;/li&gt;
        ///    &lt;li&gt;If the selected planet has three or fewer infantry on it, all infantry will be destroyed. Otherwise, three infantry will be destroyed.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string UnstablePlanet {
            get {
                return ResourceManager.GetString("UnstablePlanet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player&amp;rsquo;s flagship is destroyed during combat, but a later effect places it into the same combat, that player cannot score &lt;i&gt;Unveil Flagship.&lt;/i&gt;&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string UnveilFlagship {
            get {
                return ResourceManager.GetString("UnveilFlagship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;The cruiser must be in the system when it is activated for &lt;i&gt;Upgrade&lt;/i&gt; to be played. &lt;i&gt;Upgrade&lt;/i&gt; cannot be played if the cruiser is moved into the active system later in the turn.&lt;/li&gt;
        ///    &lt;li&gt;A player must have at least one cruiser in the active system to play and resolve &lt;i&gt;Upgrade&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;If a player wishes to place a dreadnought, but there are none left in their reinforcements, they may remove a dreadnought from any system that does not contain one of their c [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Upgrade {
            get {
                return ResourceManager.GetString("Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Uprising&lt;/i&gt; cannot be played if all planets owned by each other player is exhausted.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;Uprising&lt;/i&gt; cannot target an exhausted planet.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Uprising {
            get {
                return ResourceManager.GetString("Uprising", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;Veto&lt;/i&gt;, the Xxcha &lt;sc&gt;Quash&lt;/sc&gt; faction ability, the Xxcha &lt;i&gt;Political Favor&lt;/i&gt; promissory note, and the &lt;i&gt;Political Secret&lt;/i&gt; promissory note are all played in the same timing window, before the rider timing window.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;If &lt;i&gt;Veto&lt;/i&gt; is used after any &lt;i&gt;Political Secret&lt;/i&gt; promissory notes have been played, those are immediately returned and will have no effect on the replacement agenda.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;Each agenda is considered separate for the purp [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Veto {
            get {
                return ResourceManager.GetString("Veto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string VolatileFuelSource {
            get {
                return ResourceManager.GetString("VolatileFuelSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;If a player wishes to place a cruiser, but there are none left in their reinforcements, they may remove a cruiser from any system that does not contain one of their command tokens and place that instead. This cruiser will be placed undamaged.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string WarEffort {
            get {
                return ResourceManager.GetString("WarEffort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string WarfareResearchFacility {
            get {
                return ResourceManager.GetString("WarfareResearchFacility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;After playing a &lt;i&gt;Warfare Rider&lt;/i&gt;, a player may use additional abilities, including playing other rider cards.&lt;/li&gt;
        ///    &lt;ol&gt;&lt;li&gt;Any other riders may be played to predict the same or a different outcome.&lt;/li&gt;&lt;/ol&gt;
        ///    &lt;li&gt;The effect of a successful &lt;i&gt;Warfare Rider&lt;/i&gt; will be resolved after the effect of the agenda.&lt;/li&gt;
        ///    &lt;li&gt;A player who cannot vote may still play a &lt;i&gt;Warfare Rider&lt;/i&gt;.&lt;/li&gt;
        ///    &lt;li&gt;If a player wishes to place a dreadnought, but there are none in their [rest of string was truncated]&quot;;.
        /// </summary>
        public static string WarfareRider {
            get {
                return ResourceManager.GetString("WarfareRider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A second &lt;i&gt;War Machine&lt;/i&gt; cannot be played during use of production to give +8 to the total production value and/or to reduce the combined cost of the produced units by 2.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;War Machine&lt;/i&gt; may only be used by effects that cause a unit to use its &lt;sc&gt;Production&lt;/sc&gt; ability. It cannot be used for other effects that produce units.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string WarMachine {
            get {
                return ResourceManager.GetString("WarMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A ship with the &lt;sc&gt;Sustain Damage&lt;/sc&gt; ability may cancel a hit produced by an anti&amp;ndash;fighter barrage roll if &lt;i&gt;Waylay&lt;/i&gt; causes that ship to be eligible to be hit.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string Waylay {
            get {
                return ResourceManager.GetString("Waylay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;While &lt;i&gt;Wormhole Reconstruction&lt;/i&gt; is in play, &lt;i&gt;Enforced Travel Ban&lt;/i&gt; will have no effect.&lt;/li&gt;
        ///    &lt;li&gt;The &amp;ldquo;Against&amp;rdquo; effect of &lt;i&gt;Wormhole Reconstruction&lt;/i&gt; will cause each player to place command tokens in each system that contains an alpha, beta, delta or gamma wormhole and one or more of that player&amp;rsquo;s ships.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string WormholeReconstruction {
            get {
                return ResourceManager.GetString("WormholeReconstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;A player with ships in a delta or gamma wormhole may research a technology from the &amp;ldquo;For&amp;rdquo; effect. Those ships will not be destroyed.&lt;/li&gt;
        ///    &lt;li&gt;A player must still meet the prerequisites for the technology they research.&lt;/li&gt;
        ///    &lt;ol&gt;
        ///        &lt;li&gt;A player may exhaust a planet with a technology specialty to ignore a prerequisite on a technology as normal. This planet will ready at the end of the agenda phase.&lt;/li&gt;
        ///        &lt;li&gt;A player may exhaust the &lt;i&gt;AI Develop [rest of string was truncated]&quot;;.
        /// </summary>
        public static string WormholeResearch {
            get {
                return ResourceManager.GetString("WormholeResearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string X89BacterialWeapon {
            get {
                return ResourceManager.GetString("X89BacterialWeapon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ol class=&quot;note&quot;&gt;
        ///    &lt;li&gt;&lt;i&gt;X&amp;ndash;89 Bacterial Weapon &amp;Omega;&lt;/i&gt; may be used against each planet in a system, if the conditions are met.&lt;/li&gt;
        ///    &lt;li&gt;&lt;i&gt;X&amp;ndash;89 Bacterial Weapon &amp;Omega;&lt;/i&gt; will trigger only after all bombardment hits have been assigned.&lt;/li&gt; 
        ///    &lt;li&gt;The L1Z1X may use &lt;i&gt;X&amp;ndash;89 Bacterial Weapon &amp;Omega;&lt;/i&gt; after they use their &lt;sc&gt;Harrow&lt;/sc&gt; faction ability.&lt;/li&gt;
        ///    &lt;/ol&gt;.
        /// </summary>
        public static string X89BacterialWeaponOmega {
            get {
                return ResourceManager.GetString("X89BacterialWeaponOmega", resourceCulture);
            }
        }
    }
}
