<div class="handel white shadow" style="width: 100%;">
    <FlexRowContainer JustifyContent="Enums.JustifyContent.FlexStart">
        <Label Text="@Strings.SliceGenerator_SliceId" FontSize="@(FontSize)" TextColor="TextColor.White" Width="20" CenterText="false" />
        <Label Text="@(GetDisplaySliceId())" FontSize="@(FontSize)" TextColor="TextColor.White" Width="20" CenterText="true" />
    </FlexRowContainer>

    <VerticalSpace Height="10" />

    <FlexRowContainer JustifyContent="Enums.JustifyContent.FlexStart">
        <Label Text="@Strings.SliceGenerator_Traits" FontSize="@(FontSize)" TextColor="TextColor.White" Width="20" CenterText="false" />

        @foreach (var planetTrait in SliceEvaluation.PlanetTraits.Keys)
        {
            for (int i = 0; i < SliceEvaluation.PlanetTraits[planetTrait]; i++)
            {
                <img src="@GetPlanetTraitPath(planetTrait)" class="max-height" style="max-width: 40px;" />
            }
        }
    </FlexRowContainer>

    <VerticalSpace Height="10" />

    <FlexRowContainer JustifyContent="Enums.JustifyContent.FlexStart">
        @foreach (var technologyType in SliceEvaluation.TechnologySkips.Keys)
        {
            for (int i = 0; i < SliceEvaluation.TechnologySkips[technologyType]; i++)
            {
                <img src="@GetTechnologyPath(technologyType)" class="max-height" style="max-width: 40px;" />
            }
        }

        @for (int i = 0; i < SliceModel.SystemTiles.Sum(x => x.Planets.Count(x => x.IsLegendary)); i++)
        {
            <img src="@GetPlanetTraitPath(PlanetTrait.Legendary)" class="max-height" style="max-width: 40px;" />
        }

        @for (int i = 0; i < SliceModel.SystemTiles.Sum(x => x.Wormholes.Count(x => x.WormholeName == WormholeName.Alpha)); i++)
        {
            <img src="@GetPlanetTraitPath(PlanetTrait.AlphaWormhole)" class="max-height" style="max-width: 40px;" />
        }

        @for (int i = 0; i < SliceModel.SystemTiles.Sum(x => x.Wormholes.Count(x => x.WormholeName == WormholeName.Beta)); i++)
        {
            <img src="@GetPlanetTraitPath(PlanetTrait.BetaWormhole)" class="max-height" style="max-width: 40px;" />
        }

        @for (int i = 0; i < SliceModel.SystemTiles.Sum(x => x.Wormholes.Count(x => x.WormholeName == WormholeName.Gamma)); i++)
        {
            <img src="@GetPlanetTraitPath(PlanetTrait.GammaWormhole)" class="max-height" style="max-width: 40px;" />
        }

    </FlexRowContainer>

    <VerticalSpace Height="10" />

    <FlexRowContainer JustifyContent="Enums.JustifyContent.FlexStart">
        <Label Text="@Strings.SliceGenerator_Total" FontSize="@FontSize" TextColor="TextColor.White" Width="20" />
        <Label Text="@SliceEvaluation.Resources.ToString()" FontSize="@FontSize" TextColor="TextColor.Yellow" Width="20" CenterText="true" />
        /
        <Label Text="@SliceEvaluation.Influence.ToString()" FontSize="@FontSize" TextColor="TextColor.Deepskyblue" Width="20" CenterText="true" />
    </FlexRowContainer>

    <VerticalSpace Height="10" />

    <FlexRowContainer JustifyContent="Enums.JustifyContent.FlexStart">
        <Label Text="@Strings.SliceGenerator_Optimal" FontSize="@FontSize" TextColor="TextColor.White" Width="20" />
        <Label Text="@SliceEvaluation.OptimalResourcesSum.ToString()" FontSize="@FontSize" TextColor="TextColor.Yellow" Width="20" CenterText="true" />
        /
        <Label Text="@SliceEvaluation.OptimalInfluenceSum.ToString()" FontSize="@FontSize" TextColor="TextColor.Deepskyblue" Width="20" CenterText="true" />
    </FlexRowContainer>
</div>