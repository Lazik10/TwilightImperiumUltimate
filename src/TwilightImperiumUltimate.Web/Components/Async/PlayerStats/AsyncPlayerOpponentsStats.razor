
<FlexRowContainer>

    <FlexColumnCenteredContainer Width="100">

        @if (AsyncPlayerProfile is not null)
        {
            <Label Text="@Strings.OpponentStats_Opponents" FontSize="24" CenterText="true" />

            <VerticalSpace Height="20" />

            <GridLayout CssClass="background" Style="grid-template-columns: 5% 35% 10% 5% 35% 10%">

                <VerticalSpace Height="20" Style="grid-column: span 6;" />

                <Label />
                <Label Text="@Strings.OpponentStats_DiscordUsername" />
                <Label Text="@Strings.OpponentStats_Games" CenterText="true" />
                <Label />
                <Label Text="@Strings.OpponentStats_DiscordUsername" />
                <Label Text="@Strings.OpponentStats_Games" CenterText="true" />


                <VerticalSpace Height="20" Style="grid-column: span 6;" />

                @if (AsyncPlayerProfile.Settings.ShowOpponents)
                {
                    var opponents = GetOpponentsByStatType();
                    var midPoint = (int)Math.Ceiling(opponents.Count / 2.0);
                    var opponentsFirstColumn = opponents.Take(midPoint).ToList();
                    var opponentsSecondColumn = opponents.Skip(midPoint).ToList();
                    var maxRows = Math.Max(opponentsFirstColumn.Count, opponentsSecondColumn.Count);

                    @for (var i = 0; i < maxRows; i++)
                    {
                        var index = i;

                        if (index < opponentsFirstColumn.Count)
                        {
                            if (opponentsFirstColumn[index].Id == 0)
                            {
                                <Label />
                                <Label Text="@(opponentsFirstColumn[index].DiscordUserName)" TextColor="TextColor.Red" FontSize="14" />
                                <Label Text="@(opponentsFirstColumn[index].Games.ToString())" CenterText="true" TextColor="TextColor.Yellow" />
                            }
                            else
                            {
                                <Label />
                                <TextButton Text="@(opponentsFirstColumn[index].DiscordUserName)" TextAlign="left" FontSize="14" Style="color: lawngreen;" OnClick="@(() => ViewProfile(opponentsFirstColumn[index].Id))" />
                                <Label Text="@(opponentsFirstColumn[index].Games.ToString())" CenterText="true" TextColor="TextColor.Yellow" />
                            }
                        }
                        else
                        {
                            <Label Text="" Style="grid-column: span 3;" />
                        }

                        if (index < opponentsSecondColumn.Count)
                        {
                            if (opponentsSecondColumn[index].Id == 0)
                            {
                                <Label />
                                <Label Text="@(opponentsSecondColumn[index].DiscordUserName)" TextColor="TextColor.Red" FontSize="14" />
                                <Label Text="@(opponentsSecondColumn[index].Games.ToString())" CenterText="true" TextColor="TextColor.Yellow" />
                            }
                            else
                            {
                                <Label />
                                <TextButton Text="@(opponentsSecondColumn[index].DiscordUserName)" TextAlign="left" FontSize="14" Style="color: lawngreen;" OnClick="@(() => ViewProfile(opponentsSecondColumn[index].Id))" />
                                <Label Text="@(opponentsSecondColumn[index].Games.ToString())" CenterText="true" TextColor="TextColor.Yellow" />
                            }
                        }
                        else
                        {
                            <Label Text="" Style="grid-column: span 3;"/>
                        }
                    }
                }
                else
                {
                    <VerticalSpace MinHeight="300" Style="grid-column: span 6;" />
                    <Label Text="@Strings.AsyncPlayer_Statistics_Private" CenterText="true" TextColor="TextColor.Red" Style="grid-column: span 6;" />
                    <VerticalSpace MinHeight="300" Style="grid-column: span 6;" />
                }

                <VerticalSpace Height="20" Style="grid-column: span 6;" />

            </GridLayout>

            <VerticalSpace Height="20" />
        }

    </FlexColumnCenteredContainer>
    <FlexColumnCenteredContainer Width="20" />

</FlexRowContainer>

