@using System.Globalization;
@using TwilightImperiumUltimate.Web.Models.Cards;
@using TwilightImperiumUltimate.Web.Resources;
@using TwilightImperiumUltimate.Web.Services.Language;
@using TwilightImperiumUltimate.Web.Services.Path;
@using TwilightImperiumUltimate.Web.Services.HttpClients;
@inject ITwilightImperiumApiHttpClient HttpCLient
@inject IPathProvider PathProvider

@if (_listOfCards is not null)
{
    <div class="image-grid">

        @foreach (var card in _listOfCards)
        {
            card.ImagePath = card.ImagePath.Replace(Strings.LanguagePlaceholder, CultureInfo.CurrentCulture.Name);
            <div class="clickable align-center" @onclick="@(() => ShowBigImage(@card, CultureInfo.CurrentCulture.Name))">
                <VerticalCard ImagePath="@card.ImagePath" TypeOfCard="@TypeOfCard"/>
            </div>
        }
    </div>

    @if (showBigImage)
    {
        <div class="big-image-overlay" @onclick="HideBigImage">
            <div class="image-container">
                <img src="@currentBigImageSrc" @onclick="HideBigImage" />
            </div>
            <div id="language-menu">
                <img src="@(GetCultureIconPath(Strings.EnglishCulture))"
                     alt="English"
                     height="50"
                     @onclick="@(() =>SetBigImageAddress(Strings.EnglishCulture))"
                     @onclick:stopPropagation="true" />
                <img src="@(GetCultureIconPath(Strings.CzechCulture))"
                     alt="Czech"
                     height="50"
                     @onclick="@(() =>SetBigImageAddress(Strings.CzechCulture))"
                     @onclick:stopPropagation="true" />
            </div>
        </div>
    }
}
